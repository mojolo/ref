<html><head><title>bash (Learning the Korn Shell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Arnold Robbins and Bill Rosenblatt" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00195-9" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Learning the Korn Shell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Book Title" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="appa_06.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="appa_08.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">A.7. bash</h2>

<p>
<a name="korn2-IDXTERM-2075" />
<a name="IXT-A-286905" />

<em class="emphasis">bash</em> is probably the most popular "third-party" shell that is
available for Unix and other systems.
In particular, it is the default shell on GNU/Linux systems.
(It also comes on the "freeware" CD with Solaris 8.)
You can get it from
the Internet, via anonymous FTP to
ftp.gnu.org
in the directory <em class="emphasis">/pub/gnu/bash</em>.  

You can also order it from
its maker at the address listed here. 
<a name="IXT-A-286906" />
</p>

<blockquote><pre class="code">
The Free Software Foundation
59 Temple Place - Suite 330
Boston, MA  02111-1307
(617) 542-2652
(617) 542-5942 (fax)
<em class="email">gnu@gnu.org</em>
<a href="http://www.gnu.org">http://www.gnu.org</a>
</pre></blockquote>

<p>
<em class="emphasis">Bash</em> was written by Brian Fox and Chet Ramey.
Chet Ramey currently maintains it.
Its name 
is in line with the FSF's penchant
for bad puns: it stands for Bourne-Again Shell.
Although <em class="emphasis">bash</em> is easily available and you don't have
to pay for it (other than the cost of media, phone calls, etc.),
it's not really public domain software.  
While public domain software doesn't have licensing restrictions,
the FSF's software does.
But those restrictions are 
diametrically opposed to those in
a commercial license:<a href="#FOOTNOTE-151">[151]</a>
instead of agreeing not to distribute the software further, 
you agree not to prevent it from being distributed further!
In other words, you enjoy unrestricted use of the software as
long as you agree not to inhibit others from doing the same.
Richard Stallman, the founder of the FSF, invented this
intriguing and admirable concept.
</p><blockquote class="footnote">
<a name="FOOTNOTE-151" /><p> [151]
Accordingly, the document that spells out these restrictions
is called a <em class="emphasis">copyleft</em>.
</p>
</blockquote>

<p>
These days,
the ideals of the Free Software and Open Source movements,
the GNU project,
and the quality of GNU software are all well known.
The most popular GNU system is GNU/Linux, which uses the Linux
kernel and GNU utilities to make a complete, fully functional,
Unix- and POSIX-compatible computing environment.
<a name="IXTR3-9" />
</p>


<p>

<em class="emphasis">bash</em> is fully compatible with the 1992 POSIX standard.

It has several of the most important Korn shell features and
the C shell features that the Korn shell has appropriated,
including aliases, functions, tilde notation, emacs and vi
editing modes, arithmetic expressions, job control, etc.
</p>

<p>
The overlap of features between <em class="emphasis">bash</em> and
the Korn shell has increased in recent years.  It includes
many <em class="emphasis">ksh93</em> features.
But it is not an exact <em class="emphasis">ksh</em> clone.
The <em class="emphasis">bash</em> FAQ, published monthly by
Chet Ramey, lists the following differences between
<em class="emphasis">bash</em> and <em class="emphasis">ksh93</em>.
Items enclosed in square brackets ([...]) are listed in
this book, but not in the FAQ.
</p>

<p>
The following new things in <em class="emphasis">ksh93</em> are not
available in <em class="emphasis">bash</em> 2.05:
</p>

<ul>
<li><p>
Associative arrays
</p></li>

<li><p>
Floating-point arithmetic and variables
</p></li>

<li><p>
Math library functions
</p></li>

<li><p>
<tt class="literal">${!name[sub]}</tt> name of subscript for associative array
</p></li>

<li><p>
"." is allowed in variable names to create a hierarchical namespace
</p></li>

<li><p>
More extensive compound assignment syntax
</p></li>

<li><p>
Discipline functions
</p></li>

<li><p>
<em class="emphasis">sleep</em> and <em class="emphasis">getconf</em> built-ins
(<em class="emphasis">bash</em> has loadable versions)
</p></li>

<li><p>
<em class="emphasis">typeset -n</em> and nameref variables
</p></li>

<li><p>
The KEYBD trap
</p></li>

<li><p>

The variables:
<tt class="literal">.sh.edchar</tt>,
<tt class="literal">.sh.edmode</tt>,
<tt class="literal">.sh.edcol</tt>,
<tt class="literal">.sh.edtext</tt>,
<tt class="literal">.sh.version</tt>,
<tt class="literal">.sh.name</tt>,
<tt class="literal">.sh.subscript</tt>,
<tt class="literal">.sh.value</tt>,
<tt class="literal">HISTEDIT</tt>
[The <tt class="literal">.sh.match</tt> variable also]
</p></li>

<li><p>
Backreferences in pattern matching (\<em class="emphasis">N</em>)
</p></li>

<li><p>
The <tt class="literal">&amp;</tt> operator in pattern lists for matching
</p></li>

<li><p>
<em class="emphasis">print -f</em> (<em class="emphasis">bash</em> uses <em class="emphasis">printf</em>)
</p></li>

<li><p>
<em class="emphasis">fc</em> has been renamed to <em class="emphasis">hist</em>
</p></li>

<li><p>
The dot command (.) can execute shell functions
</p></li>

<li><p>
Exit statuses between 0 and 255
</p></li>

<li><p>
The <tt class="literal">set -o pipefail</tt> option
</p></li>

<li><p>
The <tt class="literal">+=</tt> variable assignment operator
</p></li>

<li><p>
<tt class="literal">TMOUT</tt> is default timeout for <em class="emphasis">read</em>
and <tt class="literal">select</tt>
</p></li>

<li><p>
<tt class="literal">&lt;&amp;</tt><em class="replaceable"><tt>n</tt></em><tt class="literal">-</tt>
and
<tt class="literal">&gt;&amp;</tt><em class="replaceable"><tt>n</tt></em><tt class="literal">-</tt>
redirections (combination <em class="emphasis">dup</em> and
<em class="emphasis">close</em>) [Here-strings with <tt class="literal">&lt;&lt;&lt;</tt>]
</p></li>

<li><p>
<tt class="literal">FPATH</tt> and <tt class="literal">PATH</tt> mixing
</p></li>

<li><p>
<em class="emphasis">getopts -a</em>
</p></li>

<li><p>
The <em class="emphasis">-R</em> invocation option
</p></li>

<li><p>
DEBUG trap now executed before each simple command, instead of after
</p></li>

<li><p>
The <em class="emphasis">printf</em>
<tt class="literal">%H</tt>,
<tt class="literal">%P</tt>,
<tt class="literal">%T</tt>
modifiers, and an output base for
<tt class="literal">%d</tt>
[Also <tt class="literal">%Z</tt>.]
</p></li>
</ul>

<p>
The following new things in <em class="emphasis">ksh93</em> are present in <em class="emphasis">bash</em> 2.05:
</p>

<ul>
<li><p>
The
<tt class="literal">for ((</tt>...<tt class="literal">;</tt>...<tt class="literal">;</tt>...<tt class="literal">)) ; do list; done</tt>
arithmetic <tt class="literal">for</tt> command
</p></li>

<li><p>
The <tt class="literal">?:</tt>, <tt class="literal">++</tt>, <tt class="literal">--</tt>,
and comma (,) arithmetic operators
</p></li>

<li><p>
The shell variable expansions:
<tt class="literal">${!</tt><em class="replaceable"><tt>param</tt></em><tt class="literal">}</tt>,
<tt class="literal">${</tt><em class="replaceable"><tt>param</em><tt class="literal">:</tt><em class="replaceable">offset</em>[<tt class="literal">:</tt><em class="replaceable">len</tt></em>]<tt class="literal">}</tt>,
<tt class="literal">${</tt><em class="replaceable"><tt>param</em><tt class="literal">/</tt><em class="replaceable">pat</em>[<tt class="literal">/</tt><em class="replaceable">str</tt></em>]<tt class="literal">}</tt>,
<tt class="literal">${!</tt><em class="replaceable"><tt>param</tt></em><tt class="literal">*}</tt>
</p></li>

<li><p>
Compound array assignment
</p></li>

<li><p>
The <tt class="literal">!</tt> reserved word
</p></li>

<li><p>
Loadable built-ins -- but <em class="emphasis">ksh</em>
uses <em class="emphasis">builtin</em> while <em class="emphasis">bash</em> uses <em class="emphasis">enable</em>
</p></li>

<li><p>
The
<em class="emphasis">command</em>,
<em class="emphasis">builtin</em>,
and
<em class="emphasis">disown</em>
built-ins
</p></li>

<li><p>
New <tt class="literal">$'</tt>...<tt class="literal">'</tt> and <tt class="literal">$"</tt>...<tt class="literal">"</tt> quoting
</p></li>

<li><p>
<tt class="literal">FIGNORE</tt> (but <em class="emphasis">bash</em>
uses <tt class="literal">GLOBIGNORE</tt>), <tt class="literal">HISTCMD</tt>
</p></li>


<li><p>
<tt class="literal">set -o notify</tt>, <tt class="literal">set -C</tt>
</p></li>


<li><p>
Changes to <em class="emphasis">kill</em> built-in
</p></li>


<li><p>
<em class="emphasis">read -A</em> (<em class="emphasis">bash</em> uses <em class="emphasis">read -a</em>)
</p></li>


<li><p>
<em class="emphasis">read -t</em>/<em class="emphasis">read -d</em>
</p></li>


<li><p>
<em class="emphasis">trap -p</em>
</p></li>


<li><p>
<em class="emphasis">exec -a</em>/<em class="emphasis">exec -c</em>
</p></li>


<li><p>
The dot command (.) restores the positional parameters when it completes
</p></li>


<li><p>
The <em class="emphasis">test</em> command conforms to POSIX.
</p></li>


<li><p>
<em class="emphasis">umask -S</em>
</p></li>


<li><p>
<em class="emphasis">unalias -a</em>
</p></li>


<li><p>
Command and arithmetic substitution performed on
<tt class="literal">PS1</tt>,
<tt class="literal">PS4</tt>,
and
<tt class="literal">ENV</tt>
</p></li>


<li><p>
Command name completion
</p></li>


<li><p>
<tt class="literal">ENV</tt> processed only for interactive shells
</p></li>

</ul>

<p>
<em class="emphasis">bash</em> has many features of its own that make
it a very powerful and flexible environment.
Here are some of the highlights:
</p>

<ul>

<li><p>

You can put backslash-escapes in the primary prompt string 
(<tt class="literal">PS1</tt>) for which <em class="emphasis">bash</em> substitutes things like
the date, time, current working directory, machine name,
user name, shell, etc.
</p></li>


<li><p>
The commands <em class="emphasis">builtin</em>, <em class="emphasis">command</em>,
and <em class="emphasis">enable</em>
give you more control over the steps <em class="emphasis">bash</em> goes through
to look for commands -- i.e., <em class="emphasis">bash</em>'s analogue to the list of
command search steps in <a href="ch07_01.htm">Chapter 7</a>.
</p></li>


<li><p>
The emacs editing mode is customizable, even more so than its
equivalent in <em class="emphasis">pdksh</em>.
You can use the <em class="emphasis">bind</em> command
to set up your own 
keystroke preferences, and there are several
more commands available -- including the ability to undo
your last command.
</p></li>


<li><p>
You can also rebind keystrokes in vi editing mode.
</p></li>


<li><p>


<em class="emphasis">pushd</em> and <em class="emphasis">popd</em> are built-in, as they are in the
C shell.
</p></li>

<li><p>
Indexed arrays may be of unlimited size.
</p></li>


<li><p>
Many new options and variables let you customize your environment
with unprecedented flexibility.
This includes <tt class="literal">set -o posix</tt> for strict POSIX conformance.
</p></li>

</ul>

<p>
We're compelled to say that many users prefer <em class="emphasis">bash</em> to the 
Korn shell.
With the increasing popularity of GNU/Linux and various BSD-derived
systems, it's not clear which shell has the larger user base.
In any case,
<em class="emphasis">bash</em> is definitely an excellent choice.
We recommend the book
<em class="emphasis">Learning the bash Shell</em> by
Cameron Newham and Bill Rosenblatt, published by
O'Reilly &amp; Associates.
(It is based on the first edition of this book.)
<a name="IXTR3-10" />
</p>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="appa_06.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="appa_08.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">A.6. pdksh</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">A.8. zsh</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2003</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,88,96" href="../index.htm"><area shape="rect" coords="90,0,165,96" href="../upt/index.htm"><area shape="rect" coords="168,1,253,107" href="../mac/index.htm"><area shape="rect" coords="255,0,335,97" href="../korn/index.htm"><area shape="rect" coords="337,0,415,109" href="../unixnut/index.htm"><area shape="rect" coords="417,0,512,122" href="../sedawk/index.htm"><area shape="rect" coords="514,0,605,105" href="../lunix/index.htm"><area shape="rect" coords="611,2,694,121" href="../vi/index.htm">
</map>

</body></html>