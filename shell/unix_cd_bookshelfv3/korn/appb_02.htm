<html><head><title>Built-in Commands and Keywords (Learning the Korn Shell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Arnold Robbins and Bill Rosenblatt" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00195-9" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Learning the Korn Shell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Book Title" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="appb_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="appb_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">B.2. Built-in Commands and Keywords</h2>

<p>
<a name="IXT-B-286918" />
<a name="IXT-B-286919" />

Here is a summary of all built-in commands and keywords.
</p>


<table border="1" cellpadding="3">






<tr>
<th>Name</th>
<th>Command/keyword</th>
<th>Chapter</th>
<th>Summary</th>
</tr>




<tr>
<td><tt class="literal">!</tt></td>
<td>Keyword</td>
<td>5</td>
<td>Invert the true/false result of the following pipeline.</td>
</tr>

<tr>
<td><tt class="literal">:</tt></td>
<td>Command</td>
<td>7</td>
<td>Do nothing (just do expansions of arguments).</td>
</tr>

<tr>
<td><tt class="literal">.</tt></td>
<td>Command</td>
<td>4</td>
<td>Read file and execute its contents in current shell.</td>
</tr>

<tr>
<td><em class="emphasis">alias</em></td>
<td>Command</td>
<td>3</td>
<td>Set up shorthand for command or command line.</td>
</tr>

<tr>
<td><em class="emphasis">bg</em></td>
<td>Command</td>
<td>8</td>
<td>Put job in background.</td>
</tr>

<tr>
<td><em class="emphasis">builtin</em></td>
<td>Command</td>
<td>&nbsp;</td>
<td><p>
Add or remove built-in commands; print information
about them.
</p></td>
</tr>

<tr>
<td><em class="emphasis">break</em></td>
<td>Command</td>
<td>5</td>
<td><p>
Exit from surrounding <tt class="literal">for</tt>,
<tt class="literal">select</tt>, <tt class="literal">while</tt>,
or <tt class="literal">until</tt> loop.
</p></td>
</tr>

<tr>
<td><tt class="literal">case</tt></td>
<td>Keyword</td>
<td>5</td>
<td>Multiway conditional construct.</td>
</tr>

<tr>
<td><em class="emphasis">cd</em></td>
<td>Command</td>
<td>1</td>
<td>Change working directory.</td>
</tr>

<tr>
<td><em class="emphasis">command</em></td>
<td>Command</td>
<td>5</td>
<td><p>
Locate built-in and external commands;
find a built-in command instead of an
identically named function.
</p></td>
</tr>

<tr>
<td><em class="emphasis">continue</em></td>
<td>Command</td>
<td>4</td>
<td><p>
Skip to next iteration of <tt class="literal">for</tt>,
<tt class="literal">select</tt>, <tt class="literal">while</tt>, or <tt class="literal">until</tt> loop.
</p></td>
</tr>

<tr>
<td><em class="emphasis">disown</em></td>
<td>Command</td>
<td>8</td>
<td><p>
Disassociate a background job from the current shell.
The effect is that the job is not sent the HUP signal
when the shell exits.
</p></td>
</tr>

<tr>
<td><em class="emphasis">echo</em></td>
<td>Command</td>
<td>4</td>
<td>Expand and print arguments (obsolete).</td>
</tr>

<tr>
<td><em class="emphasis">exec</em></td>
<td>Command</td>
<td>9</td>
<td>Replace shell with given program.</td>
</tr>

<tr>
<td><em class="emphasis">exit</em></td>
<td>Command</td>
<td>5</td>
<td>Exit from shell.</td>
</tr>

<tr>
<td><em class="emphasis">export</em></td>
<td>Command</td>
<td>3</td>
<td>Create environment variables.</td>
</tr>

<tr>
<td><em class="emphasis">eval</em></td>
<td>Command</td>
<td>7</td>
<td>Process arguments as a command line.</td>
</tr>

<tr>
<td><em class="emphasis">false</em></td>
<td>Command</td>
<td>8</td>
<td><p>
Do nothing and exit unsuccessfully.
Useful for making infinite loops.
</p></td>
</tr>

<tr>
<td><em class="emphasis">fg</em></td>
<td>Command</td>
<td>8</td>
<td>Put background job in foreground.</td>
</tr>

<tr>
<td><tt class="literal">for</tt></td>
<td>Keyword</td>
<td>5</td>
<td>Looping construct.</td>
</tr>

<tr>
<td><tt class="literal">function</tt></td>
<td>Keyword</td>
<td>4</td>
<td>Define function.</td>
</tr>

<tr>
<td><em class="emphasis">getconf</em></td>
<td>Command</td>
<td>&nbsp;</td>
<td><p>
Get system-specific information.
The parameters are defined by POSIX.
</p></td>
</tr>

<tr>
<td><em class="emphasis">getopts</em></td>
<td>Command</td>
<td>6</td>
<td>Process command-line options.</td>
</tr>

<tr>
<td><em class="emphasis">hist</em></td>
<td>Command</td>
<td>2</td>
<td>Work with command history.</td>
</tr>

<tr>
<td><tt class="literal">if</tt></td>
<td>Keyword</td>
<td>5</td>
<td>Conditional construct.</td>
</tr>

<tr>
<td><em class="emphasis">jobs</em></td>
<td>Command</td>
<td>1</td>
<td>List background jobs.</td>
</tr>

<tr>
<td><em class="emphasis">kill</em></td>
<td>Command</td>
<td>8</td>
<td>Send signal to process.</td>
</tr>

<tr>
<td><em class="emphasis">let</em></td>
<td>Command</td>
<td>6</td>
<td>Arithmetic variable assignment.</td>
</tr>

<tr>
<td><em class="emphasis">newgrp</em></td>
<td>Command</td>
<td>&nbsp;</td>
<td>Start new shell with new group ID (obsolete).</td>
</tr>

<tr>
<td><em class="emphasis">print</em></td>
<td>Command</td>
<td>1</td>
<td>Expand and print arguments on standard output.</td>
</tr>

<tr>
<td><em class="emphasis">printf</em></td>
<td>Command</td>
<td>7</td>
<td><p>
Expand and print arguments on standard output,
using ANSI C <em class="emphasis">printf</em>(3) format
specifiers.
</p></td>
</tr>

<tr>
<td><em class="emphasis">pwd</em></td>
<td>Command</td>
<td>1</td>
<td>Print working directory.</td>
</tr>

<tr>
<td><em class="emphasis">read</em></td>
<td>Command</td>
<td>7</td>
<td>Read a line from standard input.</td>
</tr>

<tr>
<td><em class="emphasis">readonly</em></td>
<td>Command</td>
<td>6</td>
<td>Make variables read-only (unassignable).</td>
</tr>

<tr>
<td><em class="emphasis">return</em></td>
<td>Command</td>
<td>5</td>
<td>Return from surrounding function or script.</td>
</tr>

<tr>
<td><tt class="literal">select</tt></td>
<td>Keyword</td>
<td>5</td>
<td>Menu generation construct.</td>
</tr>

<tr>
<td><em class="emphasis">set</em></td>
<td>Command</td>
<td>3</td>
<td>Set options.</td>
</tr>

<tr>
<td><em class="emphasis">shift</em></td>
<td>Command</td>
<td>6</td>
<td>Shift command-line arguments.</td>
</tr>

<tr>
<td><em class="emphasis">sleep</em></td>
<td>Command</td>
<td>8</td>
<td>Suspend execution for the given number of seconds.</td>
</tr>

<tr>
<td><em class="emphasis">test</em></td>
<td>Command</td>
<td>5</td>
<td><p>
Old version of conditional test program.
Use <tt class="literal">[[</tt>...<tt class="literal">]]</tt> instead.
</p></td>
</tr>

<tr>
<td><tt class="literal">time</tt></td>
<td>Keyword</td>
<td>&nbsp;</td>
<td><p>
Run command and print execution times.
By itself, prints cumulative times for the shell and all
children.
</p></td>
</tr>

<tr>
<td><em class="emphasis">trap</em></td>
<td>Command</td>
<td>8</td>
<td>Set up signal-catching routine.</td>
</tr>

<tr>
<td><em class="emphasis">true</em></td>
<td>Command</td>
<td>8</td>
<td><p>
Do nothing and exit successfully.
Useful for making infinite loops.
</p></td>
</tr>

<tr>
<td><em class="emphasis">typeset</em></td>
<td>Command</td>
<td>6</td>
<td>Set special characteristics of variables and functions.</td>
</tr>

<tr>
<td><em class="emphasis">ulimit</em></td>
<td>Command</td>
<td>10</td>
<td>Set/show process resource limits.</td>
</tr>

<tr>
<td><em class="emphasis">umask</em></td>
<td>Command</td>
<td>10</td>
<td>Set/show file permission mask.</td>
</tr>

<tr>
<td><em class="emphasis">unalias</em></td>
<td>Command</td>
<td>3</td>
<td>Remove alias definitions.</td>
</tr>

<tr>
<td><em class="emphasis">unset</em></td>
<td>Command</td>
<td>3</td>
<td>Remove definitions of variables or functions.</td>
</tr>

<tr>
<td><tt class="literal">until</tt></td>
<td>Keyword</td>
<td>5</td>
<td>Looping construct.</td>
</tr>

<tr>
<td><em class="emphasis">wait</em></td>
<td>Command</td>
<td>8</td>
<td>Wait for background job(s) to finish.</td>
</tr>

<tr>
<td><em class="emphasis">whence</em></td>
<td>Command</td>
<td>3</td>
<td>Identify source of command.</td>
</tr>

<tr>
<td><tt class="literal">while</tt></td>
<td>Keyword</td>
<td>5</td>
<td>Looping construct.</td>
</tr>


</table><p>

<p>
Assignments for the <em class="emphasis">alias</em>, <em class="emphasis">export</em>,
<em class="emphasis">readonly</em>, and <em class="emphasis">typeset</em> commands
are processed like variable assignments, in that tilde expansion is done
after the <tt class="literal">=</tt> character, and field splitting is not
done on any variable substitutions in the value being assigned.
</p>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="appb_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="appb_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">B. Reference Information</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">B.3. Predefined Aliases</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2003</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,88,96" href="../index.htm"><area shape="rect" coords="90,0,165,96" href="../upt/index.htm"><area shape="rect" coords="168,1,253,107" href="../mac/index.htm"><area shape="rect" coords="255,0,335,97" href="../korn/index.htm"><area shape="rect" coords="337,0,415,109" href="../unixnut/index.htm"><area shape="rect" coords="417,0,512,122" href="../sedawk/index.htm"><area shape="rect" coords="514,0,605,105" href="../lunix/index.htm"><area shape="rect" coords="611,2,694,121" href="../vi/index.htm">
</map>

</body></html>