<html><head><title>Arithmetic (Learning the Korn Shell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Arnold Robbins and Bill Rosenblatt" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00195-9" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Learning the Korn Shell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Book Title" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="appb_07.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="appb_09.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">B.8. Arithmetic</h2>

<p>
<a name="IXT-B-286926" />

Starting with <em class="emphasis">ksh93m</em>, the built-in arithmetic facility
understands a large percentage of the C language's expressions.
This makes the shell more attractive as a full-blown programming
language. The following features are available:
</p>


<dl>

<dt><i>Trailing type suffixes</i></dt>
<dd>
Integer constants can have a trailing <tt class="literal">U</tt>
or <tt class="literal">L</tt> suffix to indicate that they are
unsigned or long, respectively. While the lowercase versions
may also be used, this is not recommended, since it is easy
to confuse an <tt class="literal">l</tt> (letter ell) with a
<tt class="literal">1</tt> (digit one).
</p></dd>


<dt><i>C character constants</i></dt>
<dd>
C single-quoted character constants are recognized.
As in C, they act like integer constants.  For example:

<blockquote><pre class="code">
$ <tt class="userinput"><b>typeset -i c</b></tt>
$ <tt class="userinput"><b>for ((c = 'a'; c &lt;= 'z'; c++))</b></tt>
&gt; <tt class="userinput"><b>do print $c</b></tt>
&gt; <tt class="userinput"><b>done</b></tt>
97
98
99
100
...
</pre></blockquote>
</p></dd>


<dt><i>Octal and hexadecimal constants</i></dt>
<dd>
You can use the C format for octal (base 8) and hexadecimal
(base 16) constants.  Octal constants start with a leading <tt class="literal">0</tt>,
and hexadecimal constants start with a leading <tt class="literal">0x</tt>
or <tt class="literal">0X</tt>.
For example:

<blockquote><pre class="code">
$ <tt class="userinput"><b>print $((010 + 1))</b></tt>     <i class="lineannotation">Octal 10 is decimal 8</i>
9
$ <tt class="userinput"><b>print $((0x10 + 1))</b></tt>    <i class="lineannotation">Hexadecimal 10 is decimal 16</i>
17
</pre></blockquote>
</p></dd>


<dt><i>Unsigned integer arithmetic</i></dt>
<dd>
By using <em class="emphasis">typeset -ui</em>, you can create
unsigned integers.  Regular integers represent both positive
and negative numbers.  Unsigned integers start at 0, go up
to some implementation-dependent value, and then "wrap"
around again to 0.  Similarly, subtracting 1 from 0
wraps around the other way, yielding the largest unsigned number:

<blockquote><pre class="code">
$ <tt class="userinput"><b>typeset -ui u=0</b></tt>
$ <tt class="userinput"><b>let u--</b></tt>
$ <tt class="userinput"><b>print $u</b></tt>
4294967295
</pre></blockquote>
</p></dd>


<dt><i>C operators and precedence</i></dt>
<dd>
<em class="emphasis">ksh</em></tt> supports the full set of
C operators, with the same precedence and associativity.
The operators were presented in detail in
<a href="ch06_01.htm">Chapter 6</a> and are summarized again
below.
</p></dd>


</dl>


<table border="1" cellpadding="3">

<tr>
<th>Operator</th>
<th>Meaning</th>
<th>Associativity</th>
</tr>




<tr>
<td><tt class="literal">++</tt> <tt class="literal">--</tt></td>
<td>Increment and decrement, prefix and postfix</td>
<td>Left to right</td>
</tr>

<tr>
<td><tt class="literal">+</tt> <tt class="literal">-</tt> <tt class="literal">!</tt> <tt class="literal">~</tt></td>
<td>Unary plus and minus; logical and bitwise negation</td>
<td>Right to left</td>
</tr>

<tr>
<td><tt class="literal">**</tt></td>
<td><p>
Exponentiation<a href="#FOOTNOTE-157">[157]</a>
</p>
</td>
<td>Right to left</td>
</tr>

<tr>
<td><tt class="literal">*</tt> <tt class="literal">/</tt> <tt class="literal">%</tt></td>
<td>Multiplication, division, and remainder</td>
<td>Left to right</td>
</tr>

<tr>
<td><tt class="literal">+</tt> <tt class="literal">-</tt></td>
<td>Addition and subtraction</td>
<td>Left to right</td>
</tr>

<tr>
<td><tt class="literal">&lt;&lt;</tt> <tt class="literal">&gt;&gt;</tt></td>
<td>Bit-shift left and right</td>
<td>Left to right</td>
</tr>

<tr>
<td><tt class="literal">&lt; &lt;= &gt; &gt;=</tt></td>
<td>Comparisons</td>
<td>Left to right</td>
</tr>

<tr>
<td><tt class="literal">==</tt> <tt class="literal">!=</tt></td>
<td>Equal and not equal</td>
<td>Left to right</td>
</tr>

<tr>
<td><tt class="literal">&amp;</tt></td>
<td>Bitwise and</td>
<td>Left to right</td>
</tr>

<tr>
<td><tt class="literal">^</tt></td>
<td>Bitwise exclusive-or</td>
<td>Left to right</td>
</tr>

<tr>
<td><tt class="literal">|</tt></td>
<td>Bitwise or</td>
<td>Left to right</td>
</tr>

<tr>
<td><tt class="literal">&amp;&amp;</tt></td>
<td>Logical and (short circuit)</td>
<td>Left to right</td>
</tr>

<tr>
<td><tt class="literal">||</tt></td>
<td>Logical or (short circuit)</td>
<td>Left to right</td>
</tr>

<tr>
<td><tt class="literal">?:</tt></td>
<td>Conditional expression</td>
<td>Right to left</td>
</tr>

<tr>
<td><p>
<tt class="literal">= += -= *= /= %= &amp;= ^= &lt;&lt;= &gt;&gt;=</tt>
</p></td>
<td>Assignment operators</td>
<td>Right to left</td>
</tr>

<tr>
<td><tt class="literal">,</tt></td>
<td>Sequential evaluation</td>
<td>Left to right</td>
</tr>


</table><p>
<a name="FOOTNOTE-157" /><p> [157]
<em class="emphasis">ksh93m</em></tt> and newer.
The <tt class="literal">**</tt> operator is not in the C language.
</p>
</blockquote>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="appb_07.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="appb_09.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">B.7. Typeset Options</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">B.9. Emacs Mode Commands</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2003</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,88,96" href="../index.htm"><area shape="rect" coords="90,0,165,96" href="../upt/index.htm"><area shape="rect" coords="168,1,253,107" href="../mac/index.htm"><area shape="rect" coords="255,0,335,97" href="../korn/index.htm"><area shape="rect" coords="337,0,415,109" href="../unixnut/index.htm"><area shape="rect" coords="417,0,512,122" href="../sedawk/index.htm"><area shape="rect" coords="514,0,605,105" href="../lunix/index.htm"><area shape="rect" coords="611,2,694,121" href="../vi/index.htm">
</map>

</body></html>