<html><head><title>Arithmetic for (Learning the Korn Shell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Arnold Robbins and Bill Rosenblatt" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00195-9" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Learning the Korn Shell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Book Title" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch06_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch06_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">6.3. Arithmetic for</h2>

<p>
The <tt class="literal">for</tt> loop as described in <a href="ch05_01.htm">Chapter 5</a>
has been in Unix shells
since the Version 7 Bourne Shell.  As mentioned, you can't do Pascal or C-style
looping for a fixed number of iterations with that <tt class="literal">for</tt> loop.
<em class="emphasis">ksh93</em> introduced the arithmetic <tt class="literal">for</tt>
loop to remedy this situation and to bring the shell closer to a traditional
(some would say "real") programming language.
</p>

<p>
The syntax resembles the shell's arithmetic facilities
that we have just seen.  It is almost identical to the syntax of the C
<tt class="literal">for</tt> loop, except for the extra set of parentheses:
</p>

<p>
<blockquote><pre class="code">
for ((<em class="replaceable"><tt>init</em>; <em class="replaceable">condition</em>; <em class="replaceable">increment</tt></em>))
do
    <em class="replaceable"><tt>statements ...</tt></em>
done
</pre></blockquote>
</p>

<p>
Here, <em class="emphasis">init</em> represents something to be done once, at the start of the loop.
The <em class="emphasis">condition</em> is tested, and as
long as it's true, the shell executes <em class="emphasis">statements</em>.
Before going back to the top of the loop to test the <em class="emphasis">condition</em> again,
the shell executes <em class="emphasis">increment</em>.
</p>

<p>
Any of <em class="emphasis">init</em>, <em class="emphasis">condition</em>, and
<em class="emphasis">increment</em> may be omitted.  A missing <em class="emphasis">condition</em>
is treated as <em class="emphasis">true</em>; i.e., the loop body always executes.
(The so-called "infinite loop" requires you to use some other method
to leave the loop.)
We'll use the arithmetic <tt class="literal">for</tt> loop for
<a href="ch06_03.htm#korn2-CHP-6-SIDEBAR-2">Task 6-2</a>, which is
our next, rather simple task.
</p>

<a name="korn2-CHP-6-SIDEBAR-2" /><blockquote><table border="1" cellpadding="6"><tr><td>
<h4 class="objtitle">Task 6-2</h4>

<p>
<a name="IXT-6-287817" />

Write a simple script that takes a list of numbers on the
command line and adds them up, printing the result.
</p>
</td></tr></table><p></blockquote>

<p>
Here's the code; the explanation follows:

<blockquote><pre class="code">
sum=0
count=$#
for ((i = 1; i &lt;= count; i++))
do
    let "sum += $1"
    shift
done
print $sum
</pre></blockquote>
</p>

<p>
The first line initializes the variable <tt class="literal">sum</tt> to 0.
<tt class="literal">sum</tt> accumulates the sum of the arguments.
The second line is mostly for readability; <tt class="literal">count</tt>
indicates how many arguments there are.  The third line starts
the loop itself.  The variable <tt class="literal">i</tt> is the loop
control variable.  The <em class="emphasis">init</em> clause sets it to
1, the <em class="emphasis">condition</em> clause tests it against the limit
<tt class="literal">count</tt>, and the <em class="emphasis">increment</em> clause
adds 1 to it each time around the loop.  One thing you'll notice right
away is that inside the <tt class="literal">for</tt> loop header, there's no
need for the <tt class="literal">$</tt> in front of a variable name to get
that variable's value.  This is true for any arithmetic expression in
the Korn shell.
</p>

<p>
The body of the loop does the addition.
It simply lets <em class="emphasis">let</em> do the math:
the addition is accomplished by adding <tt class="literal">$1</tt>
to the value in <tt class="literal">sum</tt>.
The <em class="emphasis">shift</em> command then
moves the next argument down into <tt class="literal">$1</tt> for use the next
time around the loop.   Finally, when the loop is done, the script
prints the result.
</p>

<p>
The arithmetic <tt class="literal">for</tt> loop is particularly
handy for working with all the elements in an indexed array,
which we're about to see in the next section.
</p>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch06_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch06_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">6.2. Numeric Variables and Arithmetic</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">6.4. Arrays</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2003</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,88,96" href="../index.htm"><area shape="rect" coords="90,0,165,96" href="../upt/index.htm"><area shape="rect" coords="168,1,253,107" href="../mac/index.htm"><area shape="rect" coords="255,0,335,97" href="../korn/index.htm"><area shape="rect" coords="337,0,415,109" href="../unixnut/index.htm"><area shape="rect" coords="417,0,512,122" href="../sedawk/index.htm"><area shape="rect" coords="514,0,605,105" href="../lunix/index.htm"><area shape="rect" coords="611,2,694,121" href="../vi/index.htm">
</map>

</body></html>