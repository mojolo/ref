<html><head><title>Customization and Subprocesses (Learning the Korn Shell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Arnold Robbins and Bill Rosenblatt" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00195-9" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Learning the Korn Shell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Book Title" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch03_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch03_06.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">3.5. Customization and Subprocesses</h2>

<p>
<a name="IXTR3-147" />
<a name="korn2-IDXTERM-679" />

Some of the variables discussed above are used by commands
you may run -- as opposed to the shell itself -- so
that they can determine certain aspects of
your environment. The majority, however, are not even known outside
the shell.
</p>

<p>
This dichotomy begs an important question:
which shell "things" are known outside the shell, and which
are only internal? This question is at the
heart of many misunderstandings about the shell and shell
programming. Before we answer, we'll ask it again in a
more precise way: which shell "things" are known to subprocesses?
Remember that whenever you enter a command, you are telling
the shell to run that command in a subprocess;
furthermore, some complex programs may start their own
subprocesses.
</p>

<p>
The answer is actually fairly simple.
Subprocesses inherit only environment variables.
They are available automatically, without the subprocess having
to take any explicit action.
All the other "things" -- shell options, aliases, and functions -- must
be made explicitly available.
The <em class="emphasis">environment file</em>
is how you do this.
Furthermore,
only interactive shells process the environment file.
The next two sections describe environment variables and
the environment file, respectively.
</p>

<a name="korn2-CHP-3-SECT-5.1" /><div class="sect2">
<h3 class="sect2">3.5.1. Environment Variables</h3>

<p>
<a name="korn2-IDXTERM-680" />

By default, only one kind of thing is known to
all kinds of subprocesses: a special class of shell variables called
<em class="emphasis">environment variables</em>. Some
of the built-in variables
we have seen are actually environment variables:
<a name="IXT-3-287415" />
<a name="IXT-3-287416" />
<a name="IXT-3-287417" />
<a name="IXT-3-287418" />
<a name="IXT-3-287419" />
<a name="IXT-3-287420" />
<a name="IXT-3-287421" />
<a name="IXT-3-287422" />

<tt class="literal">HISTFILE</tt>, <tt class="literal">HOME</tt>,
<tt class="literal">LOGNAME</tt>,
<tt class="literal">PATH</tt>,
<tt class="literal">PWD</tt>, <tt class="literal">OLDPWD</tt>, <tt class="literal">SHELL</tt>, and
<tt class="literal">TERM</tt>.
</p>

<p>
It should be clear why these and other variables need to be
known by subprocesses.
<a name="IXT-3-287423" />
<a name="IXT-3-287424" />
We have already seen the most obvious
example: text editors like <em class="emphasis">vi</em> and Emacs
need to know what kind of terminal you are using; <tt class="literal">TERM</tt>
is their way of determining this. As another example,
most Unix mail programs allow you to edit a message
with your favorite text editor. How does <em class="emphasis">mail</em> know which
editor to use? The value of <tt class="literal">EDITOR</tt> (or sometimes <tt class="literal">VISUAL</tt>).
<a name="IXT-3-287425" />
<a name="IXTR3-148" />
</p>

<p>
<a name="korn2-IDXTERM-693" />
<a name="korn2-IDXTERM-694" />
Any variable can become an environment variable, and new variables can be
created that are environment variables.
Environment variables are created
with the command:
</p>

<p>
<blockquote><pre class="code">
export <em class="replaceable"><tt>varnames</tt></em>
</pre></blockquote>
</p>

<p>
(<em class="emphasis">varnames</em> can be a list of variable
names separated by whitespace.)
If the names in <em class="emphasis">varnames</em> already exist, then those variables
become environment variables.
If they don't, the shell creates new variables that are environment variables.
</p>

<p>
With <em class="emphasis">ksh</em>, you may assign a value and export the
variable in one step:

<blockquote><pre class="code">
export TMPDIR=/var/tmp
</pre></blockquote>
<a name="IXTR3-149" />
</p>

<p>
You can also define variables to be in the environment of a particular
subprocess (command) only, by preceding the command with the
variable assignment, like this:
</p>

<p>
<blockquote><pre class="code">
<em class="replaceable"><tt>varname</em>=<em class="replaceable">value command</tt></em>
</pre></blockquote>
</p>

<p>
You can put as many assignments before the command as you
want.<a href="#FOOTNOTE-46">[46]</a>
<a name="IXT-3-287427" />
For example, assume you're using the Emacs editor.

You are having problems getting it to work with your terminal,
so you're experimenting with different values of <tt class="literal">TERM</tt>.
You can do this most easily by entering commands that look
like:
</p><blockquote class="footnote">
<a name="FOOTNOTE-46" /><p> [46]
<a name="IXT-3-287426" />
There is an obscure option, <em class="emphasis">keyword</em>, that (if turned on) lets you
put this type of environment variable definition <em class="emphasis">anywhere</em> on the
command line, not just at the beginning.
</p>
</blockquote>

<p>
<blockquote><pre class="code">
TERM=trythisone emacs <em class="emphasis">filename</em>
</pre></blockquote>
</p>

<p>
<em class="emphasis">emacs</em> has <tt class="literal">trythisone</tt> defined as its value of <tt class="literal">TERM</tt>,
yet the environment variable in your shell keeps whatever value
(if any) it had before.
<a name="IXTR3-150" />
This syntax is not very widely used, so we won't see it
very often throughout the remainder of this book.
<a name="IXTR3-151" />

</p>

<p>
Nevertheless, environment variables are important.

Most <em class="emphasis">.profile</em>
files include definitions of environment variables;
the sample <em class="emphasis">.profile</em> earlier in this chapter
contained two such definitions:
</p>

<p>
<blockquote><pre class="code">
EDITOR=/usr/local/bin/emacs
SHELL=/bin/ksh
export EDITOR SHELL
</pre></blockquote>
</p>

<p>

<a name="IXT-3-287428" />
For some reason, the Korn shell doesn't make <tt class="literal">EDITOR</tt>
an environment variable by default.

This means, among other things, that <em class="emphasis">mail</em> will not know
which editor to use when you want to edit a message.<a href="#FOOTNOTE-47">[47]</a>
Therefore you
would have to export it yourself by using the <em class="emphasis">export</em> command in your <em class="emphasis">.profile</em>.
</p><blockquote class="footnote">
<a name="FOOTNOTE-47" /><p> [47]
<a name="IXT-3-287429" />
Actually, it will default to the line editor <em class="emphasis">ed</em>.
You don't want that, now, do you?
</p>
</blockquote>

<p>

The second line in the previous code is meant for systems that do not
have the Korn shell installed as the default shell, i.e.,
as <em class="emphasis">/bin/sh</em>.

<a name="IXT-3-287430" />
Some programs run shells as subprocesses
within themselves (e.g., many mail programs and
the Emacs editor's shell mode);
by convention, they use the <tt class="literal">SHELL</tt> variable to
determine which shell to use.
</p>

<p>
<a name="IXT-3-287431" />
<a name="IXT-3-287432" />
You can find out which variables are environment variables
and what their values are by typing <em class="emphasis">export</em> without
arguments.
<a name="IXTR3-152" />

</p>
</div>

<a name="korn2-CHP-3-SECT-5.2" /><div class="sect2">
<h3 class="sect2">3.5.2. The Environment File</h3>

<p>
<a name="korn2-IDXTERM-706" />
<a name="IXT-3-287433" />
Although environment variables are always known to
subprocesses, the shell must be explicitly told which
other variables, options, aliases, etc., are to be
communicated to subprocesses. The way to do this is to
put all such definitions in a special file called
the <em class="emphasis">environment file</em> instead of your
<em class="emphasis">.profile</em>.
</p>

<p>
<a name="korn2-IDXTERM-708" />
You can call the environment file anything you like, as
long as you set the environment variable <tt class="literal">ENV</tt> to
the file's name. The usual way to do this is as follows:
</p>

<ol>

<li><p>
Decide which definitions in your <em class="emphasis">.profile</em> you want
to propagate to subprocesses. Remove them from <em class="emphasis">.profile</em>
and put them in a file you designate as your environment file.
</p></li>

<li><p>
Put a line in your <em class="emphasis">.profile</em> that tells the shell where
your environment file is:
</p>

<p>
<blockquote><pre class="code">
ENV=<em class="emphasis">envfilename</em>
export ENV
</pre></blockquote>
</p>

<p>
It is important that the value of <tt class="literal">ENV</tt> be exported, so
that shell subprocesses are able to find it.
</p></li>

<?troff .Nd 10?>

<li><p>
For the changes to take effect immediately,
logout and then log back in again.<a href="#FOOTNOTE-48">[48]</a>
(You can't just use <tt class="literal">. ~/.profile</tt>; the shell does
not rerun the <tt class="literal">$ENV</tt> file when the value of <tt class="literal">ENV</tt>
changes.)
</p><blockquote class="footnote">
<a name="FOOTNOTE-48" /><p> [48]
This assumes that the Korn shell is defined as your
login shell. If it isn't, you should
have your system administrator install it as your login shell.
</p>
</blockquote></li>

</ol>
<a name="IXTR3-153" />
<a name="IXTR3-154" />
<a name="IXT-3-287434" />
<a name="IXT-3-287435" />
<p>
The idea of the environment file comes from the
C shell's <em class="emphasis">.cshrc</em>
file; thus, many Korn shell users who came from the C shell world
call their environment files <em class="emphasis">.kshrc</em>.
(The <tt class="literal">rc</tt> suffix for
initialization files is practically universal throughout the Unix
world. It stands for "run commands" and entered the Unix lexicon by
way of MIT's Compatible Time Sharing System (CTSS)).
</p>

<p>
<a name="IXT-3-287436" />
As a general rule, you should put as few definitions
as possible in <em class="emphasis">.profile</em> and as many as possible in your
environment file. Because definitions add to rather than
take away from an environment, there is little chance that they
will cause something in a subprocess not to work properly.
(An exception might be name clashes if you go overboard with
aliases.)
</p>

<p>
The only things that really need to be in <em class="emphasis">.profile</em>
are commands that aren't definitions
but actually run or produce output when you log in. Option
and alias definitions should go into the environment file.
In fact, there are many Korn shell users who have tiny
<em class="emphasis">.profile</em> files, e.g.:
</p>

<p>
<blockquote><pre class="code">
stty stop ^S intr ^C erase ^?
date
from
export ENV=~/.kshrc
</pre></blockquote>
</p>

<p>
<a name="IXT-3-287437" />
(The <em class="emphasis">from</em> command, in some versions of Unix, checks if you
have any mail and prints a list of message headers if you do.)
Although this is a small <em class="emphasis">.profile</em>, this user's environment file
could be huge.
</p>

<p>
There is an important difference between <em class="emphasis">ksh88</em> and
<em class="emphasis">ksh93</em>.  In <em class="emphasis">ksh88</em>, the environment
file is always executed.  In <em class="emphasis">ksh93</em>, only
<em class="emphasis">interactive</em> shells
(those not reading from a script, but rather from a terminal) execute the environment file.
Thus, it is best that the environment file contain only commands that
are useful for interactive use, such as alias and option settings.
</p>

<p>
Another difference between the two shell versions is that <em class="emphasis">ksh88</em>
only does variable substitution on the value of <tt class="literal">ENV</tt>,
while <em class="emphasis">ksh93</em> does variable, command, and arithmetic
substitution on its value.
(Command substitution is described in <a href="ch04_01.htm">Chapter 4</a>.
Arithmetic substitution is described in <a href="ch06_01.htm">Chapter 6</a>.)
<a name="IXTR3-155" />
<a name="IXTR3-156" />

</p>
</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch03_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch03_06.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">3.4. Shell Variables</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">3.6. Customization Hints</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2003</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,88,96" href="../index.htm"><area shape="rect" coords="90,0,165,96" href="../upt/index.htm"><area shape="rect" coords="168,1,253,107" href="../mac/index.htm"><area shape="rect" coords="255,0,335,97" href="../korn/index.htm"><area shape="rect" coords="337,0,415,109" href="../unixnut/index.htm"><area shape="rect" coords="417,0,512,122" href="../sedawk/index.htm"><area shape="rect" coords="514,0,605,105" href="../lunix/index.htm"><area shape="rect" coords="611,2,694,121" href="../vi/index.htm">
</map>

</body></html>