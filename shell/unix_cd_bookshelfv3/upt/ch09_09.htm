<html><head><title>Running Commands on What You Find (Unix Power Tools, 3rd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Shelley Powers, Jerry Peek, Tim O'Reilly, Mike Loukides and  " /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00330-7" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="UNIX Power Tools, 3rd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Unix Power Tools" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Unix Power Tools" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch09_08.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch09_10.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">9.9. Running Commands on What You Find</h2>

<p><a name="IXT-9-47" />Often, when you find a file, you
don't just want to see its name; you want to do
something, like <b class="emphasis-bold">grep</b> (<a href="ch13_02.htm#upt3-CHP-13-SECT-2">Section 13.2</a>) for a text string. To do this, use the
<em class="filename">-exec</em><a name="IXT-9-48" /><a name="IXT-9-49" /> operator. This allows you
to specify a command that is executed upon each file that is found.
</p>

<p>The syntax is peculiar and in many cases, it is simpler just to pipe
the output of <em class="filename">find</em> to <b class="emphasis-bold">xargs</b> (<a href="ch28_17.htm#upt3-CHP-28-SECT-17">Section 28.17</a>). However,
there are cases where <em class="filename">-exec</em> is just the thing,
so let's plunge in and explain its peculiarities.
</p>

<p><a name="IXT-9-50" />The <em class="filename">-exec</em> operator
allows you to execute any command, including another
<em class="filename">find</em> command. If you consider that for a moment,
you realize that <em class="filename">find</em> needs some way to
distinguish the command it's executing from its own
arguments. The obvious choice is to use the same end-of-command
character as the shell (the semicolon). But since the shell uses the
semicolon itself, it is necessary to escape the character with a
backslash or quotes.
</p>

<p>Therefore, every <em class="filename">-exec</em> operator ends with the
characters <tt class="literal">\;</tt>. There is one more special argument
that <em class="filename">find</em> treats differently:
<tt class="literal">{}</tt><a name="IXT-9-51" />.
These two characters are used as the variable whose name is the file
<em class="filename">find</em> found. Don't bother
rereading that last line: an example will clarify the usage. The
following is a trivial case and uses the <em class="filename">-exec</em>
operator with <em class="filename">echo</em> to mimic the
<em class="filename">-print</em> operator:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>find . -exec echo {} \;</b></tt></pre></blockquote>

<p>The <b class="emphasis-bold">C shell</b> (<a name="IXT-9-52" /><a href="ch29_01.htm#upt3-CHP-29-SECT-1">Section 29.1</a>) uses
the characters <tt class="literal">{</tt> and <tt class="literal">}</tt>, but
doesn't change <tt class="literal">{}</tt> together, which
is why it is not necessary to quote these characters. The semicolon
must be quoted, however. <a name="IXT-9-53" />Quotes can be used instead of a
backslash:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>find . -exec echo {} ';'</b></tt></pre></blockquote>

<p>as both will sneak the semicolon past the shell and get it to the
<em class="filename">find</em> command. As I said before,
<em class="filename">find</em> can even call <em class="filename">find</em>. If
you wanted to list every <a name="IXT-9-54" />symbolic link in every directory owned
by a group <em class="filename">staff</em> under the current directory,
you could execute:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>find `pwd` -type d -group staff -exec find {} -type l -print \;</b></tt></pre></blockquote>

<p>To search for all files with
<a name="IXT-9-55" />group-write permission under
the current directory and to remove the permission, you can use:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>find . -perm -20 -exec chmod g-w {} \;</b></tt></pre></blockquote>

<p>or:</p>

<blockquote><pre class="code">% <tt class="userinput"><b>find . -perm -20 -print | xargs chmod g-w </b></tt></pre></blockquote>

<p><a name="IXT-9-56" /> <a name="IXT-9-57" />The difference between
<em class="filename">-exec</em> and <em class="filename">xargs</em> is subtle.
The first one will execute the program once per file, while
<em class="filename">xargs</em> can handle several files with each
process. However, <em class="filename">xargs</em> may have problems with
filenames that contain embedded spaces. (Versions of
<em class="filename">xargs</em><a name="IXT-9-58" />
that support the <em class="filename">-0</em> option can avoid this
problem; they expect <a name="IXT-9-59" />NUL characters as delimiters instead of
spaces, and <em class="filename">find</em><a name="IXT-9-60" /><a name="IXT-9-61" />'s
<em class="filename">-print0</em> option generates output that way.)
</p>

<p><a name="IXT-9-62" />Occasionally, people create a strange file
that they can't delete. This could be caused by
accidentally creating a file with a space or some control character
in the name. <em class="filename">find</em> and <em class="filename">-exec</em>
can delete this file, while <em class="filename">xargs</em> could not. In
this case, use<a name="IXT-9-63" /> <em class="filename">ls -il</em> to list
the files and i-numbers, and use the
<em class="filename">-inum</em><a name="IXT-9-64" /><a name="IXT-9-65" />
operator with <em class="filename">-exec</em> to delete the file:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>find . -inum 31246 -exec rm {} ';'</b></tt></pre></blockquote>

<p>If you wish, you can use
<em class="filename">-ok</em><a name="IXT-9-66" />, which does the same as
<em class="filename">-exec</em>, except the program asks you to confirm
the action first before executing the command. It is a good idea to
be cautious when using <em class="filename">find</em>, because the program
can make a mistake into a disaster. When in doubt, use
<em class="filename">echo</em> as the command. Or send the output to a
file, and examine the file before using it as input to
<em class="filename">xargs</em>. This is how I discovered that
<em class="filename">find</em> requires <tt class="literal">{}</tt> to stand
alone in the arguments to <em class="filename">-exec</em>. I wanted to
rename some files using <tt class="literal">-exec mv {} {}.orig</tt>, but
<em class="filename">find</em> wouldn't replace the
<tt class="literal">{}</tt> in <tt class="literal">{}.orig</tt>. I learned that I
have to write a shell script that I tell <em class="filename">find</em> to
execute.
</p>

<a name="ch09-3-fm2xml" /><blockquote><b>NOTE:</b> 
<a name="IXT-9-67" />GNU <i class="command">find</i> will replace
the <tt class="literal">{}</tt><a name="IXT-9-68" /> in <tt class="literal">{}.orig</tt> for you. If
you don't have GNU <i class="command">find</i>, a little
Bourne shell <i class="command">while</i> loop with redirected input can
handle that too:
</p>


<blockquote><pre class="code">$ <tt class="userinput"><b>find ... -print |</b></tt>
&gt; <tt class="userinput"><b>while read file</b></tt>
&gt; <tt class="userinput"><b>do mv "$file" "$file.orig"</b></tt>
&gt; <tt class="userinput"><b>done</b></tt></pre></blockquote>


<p><i class="command">find</i> writes the filenames to its standard output.
The <i class="command">while</i> loop and its <i class="command">read</i>
command read the filenames from standard input then make them
available as <tt class="literal">$file</tt>, one by one.
</p>
</blockquote>

<p><a href="ch09_12.htm#upt3-CHP-9-SECT-12">Section 9.12</a> and <a href="ch09_27.htm#upt3-CHP-9-SECT-27">Section 9.27</a> have more examples of
<em class="filename">-exec</em>.
</p>

<p> <em class="emphasis">-- BB</em></p>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch09_08.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch09_10.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">9.8. Exact File-Time Comparisons</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">9.10. Using -exec to Create Custom Tests</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2003</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,88,96" href="../index.htm"><area shape="rect" coords="90,0,165,96" href="../upt/index.htm"><area shape="rect" coords="168,1,253,107" href="../mac/index.htm"><area shape="rect" coords="255,0,335,97" href="../korn/index.htm"><area shape="rect" coords="337,0,415,109" href="../unixnut/index.htm"><area shape="rect" coords="417,0,512,122" href="../sedawk/index.htm"><area shape="rect" coords="514,0,605,105" href="../lunix/index.htm"><area shape="rect" coords="611,2,694,121" href="../vi/index.htm">
</map>

</body></html>