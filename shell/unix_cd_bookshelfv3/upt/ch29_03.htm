<html><head><title>C-Shell Aliases with Command-Line Arguments (Unix Power Tools, 3rd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Shelley Powers, Jerry Peek, Tim O'Reilly, Mike Loukides and  " /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00330-7" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="UNIX Power Tools, 3rd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Unix Power Tools" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Unix Power Tools" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch29_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch29_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">29.3. C-Shell Aliases with Command-Line Arguments</h2>

<p><a name="upt3-IDXTERM-4423" /> <a name="upt3-IDXTERM-4424" />It's <a name="upt3-IDXTERM-4425" /> <a name="upt3-IDXTERM-4426" />convenient for your
aliases to use command-line arguments. For example,
let's think about an alias named
<i class="command">phone</i>:
</p>

<blockquote><pre class="code">alias phone 'cat ~/phonelist | grep -i'</pre></blockquote>

<p>After you define that alias, you could type <tt class="literal">phone
smith</tt>. The shell would find the <i class="command">phone</i>
alias and execute it <b class="emphasis-bold">with the argument (smith)
at the end</b> (<a href="ch29_02.htm#upt3-CHP-29-SECT-2">Section 29.2</a>) this way:
</p>

<blockquote><pre class="code">cat ~/phonelist | grep -i smith</pre></blockquote>

<p>Using <i class="command">cat</i> and a pipe that way is <b class="emphasis-bold">inefficient</b> (<a href="ch43_02.htm#upt3-CHP-43-SECT-2">Section 43.2</a>). It
might be more sensible to have an alias that worked like this:
</p>

<blockquote><pre class="code">grep -i <em class="replaceable"><tt>name</tt></em> ~/phonelist</pre></blockquote>

<p><a name="IXT-29-4366" /><a name="IXT-29-4367" />How
do we do this? The C shell's <b class="emphasis-bold">history</b> (<a href="ch30_08.htm#upt3-CHP-30-SECT-8">Section 30.8</a>)
facility lets us use the notation <tt class="literal">!$</tt> to refer to
the last word in the previous command; the notation
<tt class="literal">!*</tt> refers to all the arguments of the previous
command. Assuming that we only want to look up aliases one at a time,
we can use <tt class="literal">!$</tt> and write our alias like this:
</p>

<blockquote><pre class="code">alias phone grep -i \!$ ~/phonelist</pre></blockquote>

<p>When we use the <i class="command">phone</i> command, its final argument
will be substituted into the alias. That is, when we type
<tt class="literal">phone bill</tt>, the shell executes the command
<tt class="literal">grep -i bill ~/phonelist</tt>.
</p>

<p><a name="upt3-IDXTERM-4429" />
<a name="upt3-IDXTERM-4430" />In
<a name="IXT-29-4368" />this example, we needed
another kind of quoting. We had to put a backslash before the
exclamation point to prevent the shell from replacing
<tt class="literal">!$</tt> with the previous command's
last argument. That is, we don't want the shell to
expand <tt class="literal">!$</tt> when we define the
alias -- that's nonsense. We want the shell to
insert the previous argument when we use the alias (in which case,
the previous argument is just the argument for the alias
itself -- clear?).
</p>

<p>But why couldn't we just use <b class="emphasis-bold">single quotes or double quotes</b> (<a href="ch27_12.htm#upt3-CHP-27-SECT-12">Section 27.12</a>)? This isn't the right place
for a full explanation, but neither single quotes nor double quotes
protect the exclamation point. <b class="emphasis-bold">The backslash
does</b> (<a href="ch27_13.htm#upt3-CHP-27-SECT-13">Section 27.13</a>). If you want to be
convinced, experiment with some commands like:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>echo '!!'    </b></tt><i class="lineannotation">Print your last command</i>
% <tt class="userinput"><b>echo '\!!'   </b></tt><i class="lineannotation">Print !!</i></pre></blockquote>

<p><a name="IXT-29-4369" />The
first <i class="command">echo</i> command shows that the shell performs
history substitution (i.e., replaces <tt class="literal">!!</tt> with your
previous command) in spite of the single quotes. The second example
shows that the backslash can prevent the shell from interpreting
<tt class="literal">!</tt> as a special character.
</p>

<p>Let's look at another alias. We want to pipe the
output of <i class="command">ls -l</i> into <i class="command">more</i>. In
this case, we would want all the arguments from the command line
instead of merely the last argument (or the only argument).
Here's the alias:
</p>

<blockquote><pre class="code">alias lm 'ls -l \!* | more'</pre></blockquote>

<p><a name="IXT-29-4370" /><a name="IXT-29-4371" />This time, we needed both kinds of
quoting: a backslash prevents the shell from interpreting the
exclamation point immediately. Single quotes protect the pipe symbol
and the asterisk (<tt class="literal">*</tt>). If you
don't protect them both, and protect only the pipe
(with a backslash), look what happens:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>alias lm ls -l \!* | more</b></tt>
alias: No match.</pre></blockquote>

<p>Because the backslash temporarily stops the special meaning of the
<tt class="literal">!</tt>, the shell next tries to find filenames that
match the <b class="emphasis-bold">wildcard</b> (<a href="ch01_13.htm#upt3-CHP-1-SECT-13">Section 1.13</a>) pattern <tt class="literal">!*</tt>. That fails
(except in the unusual case when you have a file in the current
directory whose name starts with a <tt class="literal">!</tt>).
</p>

<a name="ch29-3-fm2xml" /><blockquote><b>NOTE:</b> 
Here's a good general rule for quoting aliases.
Unless you're trying to do something special with an
alias and you understand quoting well, put single quotes
(<tt class="literal">'</tt>) around the whole definition and put a
backslash before every exclamation point (<tt class="literal">\!</tt>).
</p>
</blockquote>

<p>If you want to pick one argument from the command line, use
<tt class="literal">\!</tt>:<em class="replaceable"><tt>n</tt></em>, where
<em class="replaceable"><tt>n</tt></em> is the number of the argument.
Here's a sample alias. It uses <b class="emphasis-bold">cat</b> (<a href="ch12_02.htm#upt3-CHP-12-SECT-2">Section 12.2</a>) to add a
header file to the file named in the first argument, then writes them
both into the file named in the second argument:
</p>

<p><tt class="literal">~</tt> <a href="ch31_11.htm#upt3-CHP-31-SECT-11">Section 31.11</a></p>

<blockquote><pre class="code">alias addhead 'cat ~/txt/header \!:1 &gt; \!:2'</pre></blockquote>

<p>This alias has two arguments: the file to which you want to add a
header and the output file. When you type:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>addhead foo bar</b></tt></pre></blockquote>

<p>the C shell substitutes the filename <tt class="literal">foo</tt> for
<tt class="literal">\!:1</tt>, and the filename <tt class="literal">bar</tt> for
<tt class="literal">\!:2</tt>, executing the command:
</p>

<blockquote><pre class="code">cat ~/txt/header foo &gt; bar</pre></blockquote>

<p>Finally, if you need to append fixed text strings to these arguments,
you need to separate the argument text from the fixed text. For
instance, here's an alias that tells the Netscape
browser to go to a URL <em class="emphasis">http://info/proj23/</em><em class="replaceable"><tt>xxx1.html</tt></em>,
where <em class="replaceable"><tt>xxx</tt></em> is a word like
<em class="emphasis">report</em>, <em class="emphasis">summary</em>, etc., that
you're typing on the command line (as an argument to
the alias). For instance, to go to the page <em class="emphasis">http://info/proj23/report1.html</em>,
you'd type:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>proj report</b></tt></pre></blockquote>

<p>The first alias below shows the wrong way to do this. The second one
shows how to quote the argument in curly braces
(<tt class="literal">{}</tt><a name="IXT-29-4372" />) so the shell doesn't
think the <tt class="literal">1</tt> after the argument is part of the
number (giving you argument 11 instead of what you want: argument 1
with the digit <em class="emphasis">1</em> after it):
</p>

<blockquote><pre class="code">alias proj 'netscape -remote "openURL(http://info/proj23/\!:11.html)"'   <i class="lineannotation">...wrong</i>
alias proj 'netscape -remote "openURL(http://info/proj23/\!{:1}1.html)"' <i class="lineannotation">...right</i></pre></blockquote>

<p>If you haven't seen this
<i class="command">netscape</i><a name="IXT-29-4373" /> -<span class="option">remote</span> technique,
by the way, it's very handy. It sends a message to
an already-open Netscape browser. You can use it from a command line
(shell prompt) or by defining a button or menu item on your window
system desktop. Recent Unix versions of Mozilla have also begun to
support this API, as well. On the Macintosh, remote control is
supported via Apple Events, but not from the command line as of this
<a name="IXTR3-4507" />
<a name="IXTR3-4508" />writing.<a name="IXTR3-4509" /> <a name="IXTR3-4510" /> 
</p>

<p><em class="emphasis">--ML, JP, and SJC<a name="IXTR3-4511" /> <a name="IXTR3-4512" /></em>
</p>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch29_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch29_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">29.2. Introduction to Shell Aliases</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">29.4. Setting and Unsetting Bourne-Type Aliases</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2003</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,88,96" href="../index.htm"><area shape="rect" coords="90,0,165,96" href="../upt/index.htm"><area shape="rect" coords="168,1,253,107" href="../mac/index.htm"><area shape="rect" coords="255,0,335,97" href="../korn/index.htm"><area shape="rect" coords="337,0,415,109" href="../unixnut/index.htm"><area shape="rect" coords="417,0,512,122" href="../sedawk/index.htm"><area shape="rect" coords="514,0,605,105" href="../lunix/index.htm"><area shape="rect" coords="611,2,694,121" href="../vi/index.htm">
</map>

</body></html>