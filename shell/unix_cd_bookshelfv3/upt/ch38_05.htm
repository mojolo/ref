<html><head><title>How to Make Backups to a Local Device (Unix Power Tools, 3rd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Shelley Powers, Jerry Peek, Tim O'Reilly, Mike Loukides and  " /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00330-7" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="UNIX Power Tools, 3rd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Unix Power Tools" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Unix Power Tools" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch38_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch38_06.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">38.5. How to Make Backups to a Local Device</h2>

<p><a name="upt3-IDXTERM-6191" /> <a name="upt3-IDXTERM-6192" />This article was written for
Linux systems, but the advice applies everywhere. You may need to
make some adjustments -- in the names of the tape drive devices
and some filesystem directories, for instance. If
you're making personal backups (of the files on your
account, for instance), you can substitute your directory names for
the system directories covered here, but the command names and
techniques won't change.
</p>

<a name="upt3-CHP-38-SECT-5.1" /><div class="sect2">
<h3 class="sect2">38.5.1. What to Back Up</h3>

<p>As <a href="ch38_03.htm#upt3-CHP-38-SECT-3">Section 38.3</a> says, the
<a name="IXT-38-2950" /><a name="IXT-38-2951" />simplest way to make a backup is to use
<i class="command">tar</i> to archive all the files on the system or only
those files in a set of specific directories. Before you do this,
however, you need to decide what files to back up. Do you need to
back up every file on the system? This is rarely necessary,
especially if you have your original installation disks or
<span class="acronym">CD-ROM</span>. If you have made specific, important
changes to the system, but everything else could simply be
reinstalled in case of a problem, you could get by archiving only
those files you have made changes to. Over time, however, it is
difficult to keep track of such changes.
</p>

<p>In general, you will be making changes to the system configuration
files in <em class="filename">/etc</em>. There are other configuration
files as well, and it can't hurt to archive
directories such as <em class="filename">/usr/local</em> (where various
packages generally get installed) and
<em class="filename">/usr/X11R6/lib/X11</em> (which contains the X Window
System configuration files). You may want to do filtering on these
directories and back up only the configuration files, since binaries
in <em class="filename">/usr/local</em> and things like fonts in the X11
distribution can be reinstalled from their original packages easily
enough.
</p>

<p><a name="IXT-38-2952" />You should also back up your kernel sources
(if you have patched your kernel sources); these are found in
<em class="filename">/usr/src/linux</em>
(<em class="filename">/usr/src/sys</em> on *BSD). At the very least,
you'll want to back up your kernel configuration
file if you've built your own kernel;
it's in <em class="filename">/usr/src/linux/.config</em>
(or
<em class="filename">/usr/src/sys/</em><em class="replaceable"><tt>platform</em>/<em class="filename">conf</em>/<em class="replaceable">KERNELNAME</tt></em>
on *BSD).
</p>

<p>It's a good idea to keep notes on what features of
the system you've changed so you can make
intelligent choices when making backups. If you're
truly paranoid, go ahead and back up the whole system: that
can't hurt, but the cost of backup media might.
</p>

<p><a name="IXT-38-2953" />Of course, you should also back up
the home directories for each user on the system; these are generally
found in <em class="filename">/home</em>. If you have your system
configured to receive electronic mail, you might want to back up the
incoming mail files for each user. Many people tend to keep old and
"important" electronic mail in
their incoming mail spool, and it's not difficult to
accidentally corrupt one of these files through a mailer error or
other mistake. These files are usually found in
<em class="filename">/var/spool/mail</em>.
</p>

</div>
<a name="upt3-CHP-38-SECT-5.2" /><div class="sect2">
<h3 class="sect2">38.5.2. Backing Up to Tape</h3>

<p>Assuming <a name="IXT-38-2954" /><a name="IXT-38-2955" /><a name="IXT-38-2956" />you know
what <a name="IXT-38-2957" />files or directories to back up,
you're ready to roll. The <i class="command">tar</i>
command can be used directly, as we saw in <a href="ch39_02.htm#upt3-CHP-39-SECT-2">Section 39.2</a>, to make a backup. For example, the command:
</p>

<blockquote><pre class="code">tar cvf /dev/rft0 /usr/src /etc /home</pre></blockquote>

<p>archives all of the files from <em class="filename">/usr/src</em>,
<em class="filename">/etc</em>, and <em class="filename">/home</em> to
<em class="filename">/dev/rft0</em>. <em class="filename">/dev/rft0</em> is the
first "floppy-tape"
device -- that is, for the type of tape drive that hangs off of
the floppy controller. Many popular tape drives for the PC use this
interface. If you have a SCSI tape drive, the device names are
<em class="filename">/dev/st0</em>, <em class="filename">/dev/st1</em>, and so
on, based on the drive number. Those tape drives with another type of
interface have their own device names; you can determine these by
looking at the documentation for the device driver in the kernel.
</p>

<p>You can then read the archive back from the tape using a command such
as:
</p>

<blockquote><pre class="code">tar xvf /dev/rft0</pre></blockquote>

<p>This is exactly as if you were dealing with a tar file on disk, as in
<a href="ch39_02.htm#upt3-CHP-39-SECT-2">Section 39.2</a>.
</p>

<p>When you use the tape drive, the tape is seen as a stream that may be
read from or written to in one direction only. Once
<i class="command">tar</i> is done, the tape device will be closed, and
the tape will rewind (if you're using the default
tape device; see below on how to prevent this). You
don't create a filesystem on a tape, nor do you
mount it or attempt to access the data on it as files. You simply
treat the tape device itself as a single
"file" to create or extract
archives from.
</p>

<p><a name="IXT-38-2958" />Be sure your tapes are formatted before
you use them if you are using a tape drive that needs it. This
ensures that the beginning-of-tape marker and bad-blocks information
has been written to the tape. At the time of this writing, no tools
exist for formatting <span class="acronym">QIC-80</span> tapes (those used with
floppy tape drivers) under Linux; you'll have to
format tapes under <span class="acronym">MS-DOS</span> or use preformatted
tapes.
</p>

<p>Creating one tar file per tape might be wasteful if the archive
requires a fraction of the capacity of the tape. To place more than
one file on a tape, you must first prevent the tape from rewinding
after each use, and you must have a way to position the tape to the
next "file marker," both for tar
file creation and for extraction.
</p>

<p><a name="IXT-38-2959" />The way to do this is to use the
nonrewinding tape devices, which are named
<em class="filename">/dev/nrft0</em>, <em class="filename">/dev/nrft1</em>, and
so on for floppy-tape drivers, and <em class="filename">/dev/nrst0</em>,
<em class="filename">/dev/nrst1</em>, and so on for SCSI tapes. When this
device is used for reading or writing, the tape will not be rewound
when the device is closed (that is, once <i class="command">tar</i> has
completed). You can then use <i class="command">tar</i> again to add
another archive to the tape. The two tar files on the tape
won't have anything to do with each other. Of
course, if you later overwrite the first tar file, you may overwrite
the second file or leave an undesirable gap between the first and
second files (which may be interpreted as garbage). In general,
don't attempt to replace just one file on a tape
that has multiple files on it.
</p>

<p>Using the nonrewinding tape device, you can add as many files to the
tape as space permits. To rewind the tape after use, use the
<i class="command">mt</i> command. <i class="command">mt</i> is a
general-purpose command that performs a number of functions with the
tape drive. For example, the command:
</p>

<blockquote><pre class="code">mt /dev/nrft0 rewind</pre></blockquote>

<p>rewinds the tape in the first floppy-tape device. (In this case, you
can use the corresponding rewinding tape device as well; however, the
tape will rewind just as a side effect of the tape device being
closed.)
</p>

<p>Similarly, the command: </p>

<blockquote><pre class="code">mt /dev/nrft0 reten</pre></blockquote>

<p>retensions the tape by winding it to the end and then rewinding it.</p>

<p><a name="IXT-38-2960" />When reading
files on a multiple-file tape, you must use the nonrewinding tape
device with <i class="command">tar</i> and the <i class="command">mt</i>
command to position the tape to the appropriate file.
</p>

<p>For example, to skip to the next file on the tape, use the command: </p>

<blockquote><pre class="code">mt /dev/nrft0 fsf 1</pre></blockquote>

<p>This skips over one file on the tape. Similarly, to skip over two
files, use:
</p>

<blockquote><pre class="code">mt /dev/nrft0 fsf 2</pre></blockquote>

<p>Be sure to use the appropriate nonrewinding tape device with
<i class="command">mt</i>. Note that this command does not move to
"file number two" on the tape; it
skips over the next two files based on the current tape position.
Just use <i class="command">mt</i> to rewind the tape if
you're not sure where the tape is currently
positioned. You can also skip back; see the <i class="command">mt</i>
manual page for a complete list of options.
</p>

<p>You need to use <i class="command">mt</i> every time you read a multifile
tape. Using <i class="command">tar</i> twice in succession to read two
archive files usually won't work; this is because
<i class="command">tar</i> doesn't recognize the file
marker placed on the tape between files. Once the first
<i class="command">tar</i> finishes, the tape is positioned at the
beginning of the file marker. Using <i class="command">tar</i>
immediately will give you an error message, because
<i class="command">tar</i> will attempt to read the file marker. After
reading one file from a tape, just use:
</p>

<blockquote><pre class="code">mt <em class="replaceable"><tt>device</tt></em> fsf 1</pre></blockquote>

<p>to move to the next file.</p>

</div>
<a name="upt3-CHP-38-SECT-5.3" /><div class="sect2">
<h3 class="sect2">38.5.3. Backing Up to Floppies or Zip Disks</h3>

<p><a name="IXT-38-2961" /><a name="IXT-38-2962" />Just
<a name="IXT-38-2963" /><a name="IXT-38-2964" />as we saw in the last section, the
command:
</p>

<blockquote><pre class="code">tar cvf /dev/fd0 /usr/src /etc /home</pre></blockquote>

<p>makes a backup of <em class="filename">/usr/src</em>,
<em class="filename">/etc</em>, and <em class="filename">/home</em> to
<em class="filename">/dev/fd0</em>, the first floppy device. You can then
read the backup using a command such as:
</p>

<blockquote><pre class="code">tar xvf /dev/fd0</pre></blockquote>

<p>If we use <em class="filename">/dev/hdd</em> instead of
<em class="filename">/dev/fd0</em> (and our Zip drive is the slave drive
on the second IDE controller), we'll be writing to
and reading from a Zip disk instead of a floppy. (Your device name
may vary depending on your OS.) Because floppies and Zip disks have a
rather limited storage capacity, <span class="acronym">GNU</span>
<i class="command">tar</i> allows you to create a
"multivolume" archive. (This
feature applies to tapes as well, but it is far more useful in the
case of smaller media.) With this feature, <i class="command">tar</i>
prompts you to insert a new volume after reading or writing each
disk. To use this feature, simply provide the <span class="option">M</span>
option to <i class="command">tar</i>, as in:
</p>

<blockquote><pre class="code">tar cvMf /dev/fd0 /usr/src /etc /home</pre></blockquote>

<p>Be sure to label your disks well, and don't get them
out of order when attempting to restore the archive.
</p>

<p><a name="IXT-38-2965" />One caveat of
this feature is that it doesn't support the
automatic <i class="command">gzip</i> compression provided by the
<span class="option">z</span> option. However, there are various reasons why you
may not want to compress your backups created with
<i class="command">tar</i>, as discussed later. At any rate, you can
create your own multivolume backups using <i class="command">tar</i> and
<i class="command">gzip</i> in conjunction with a program that reads and
writes data to a sequence of disks (or tapes), prompting for each in
succession. One such program is <i class="command">backflops</i>,
available on several Linux distributions and on the
<span class="acronym">FTP</span> archive sites. A do-it-yourself way to
accomplish the same thing would be to write the backup archive to a
disk file and use <i class="command">dd</i> or a similar command to write
the archive as individual chunks to each disk. If
you're brave enough to try this, you can figure it
out for yourself. [Aw, come on, guys, have a heart! (Psst, readers:
look at the end of <a href="ch21_09.htm#upt3-CHP-21-SECT-9">Section 21.9</a>.)
 -- <em class="emphasis">JP</em>]
</p>

</div>
<a name="upt3-CHP-38-SECT-5.4" /><div class="sect2">
<h3 class="sect2">38.5.4. To gzip, or Not to gzip?</h3>

<p><a name="IXT-38-2966" /><a name="IXT-38-2967" /><a name="IXT-38-2968" /><a name="IXT-38-2969" /><a name="IXT-38-2970" /><a name="IXT-38-2971" />There are good arguments both for and
against compression of <i class="command">tar</i><a name="IXT-38-2972" /> archives when making backups. The
overall problem is that neither <i class="command">tar</i> nor
<i class="command">gzip</i> is particularly fault-tolerant, no matter how
convenient they are. Although compression using
<i class="command">gzip</i> can greatly reduce the amount of backup media
required to store an archive, compressing entire
<i class="command">tar</i> files as they are written to floppy or tape
makes the backup prone to complete loss if one block of the archive
is corrupted, say, through a media error (not uncommon in the case of
floppies and tapes). Most compression algorithms,
<i class="command">gzip</i> included, depend on the coherency of data
across many bytes to achieve compression. If any data within a
compressed archive is corrupt, <i class="command">gunzip</i> may not be
able to uncompress the file at all, making it completely unreadable
to <i class="command">tar</i>. The same applies to
<i class="command">bzip2</i>. It may compress things better than
<i class="command">gzip</i>, but it has the same lack of fault-tolerance.
</p>

<p>This is much worse than if the tar file were uncompressed on the
tape. Although <i class="command">tar</i> doesn't
provide much protection against data corruption within an archive, if
there is minimal corruption within a tar file, you can usually
recover most of the archived files with little trouble, or at least
those files up until the corruption occurs. Although far from
perfect, it's better than losing your entire backup.
</p>

<p><a name="IXT-38-2973" /><a name="IXT-38-2974" />A
better solution would be to use an archiving tool other than
<i class="command">tar</i> to make backups. There are several options
available. <b class="emphasis-bold">cpio</b>
(<a name="IXT-38-2975" /><a href="ch38_13.htm#upt3-CHP-38-SECT-13">Section 38.13</a>) is an archiving utility that packs files
together, much like <i class="command">tar</i>. However, because of the
simpler storage method used by <i class="command">cpio</i>, it recovers
cleanly from data corruption in an archive. (It still
doesn't handle errors well on gzipped files.)
</p>

<p><a name="IXT-38-2976" />The best
solution may be to use a tool such as <i class="command">afio</i>.
<i class="command">afio</i> supports multivolume backups and is similar
in some respects to <i class="command">cpio</i>. However,
<i class="command">afio</i> includes compression and is more reliable
because each individual file is compressed. This means that if data
on an archive is corrupted, the damage can be isolated to individual
files, instead of to the entire backup.
</p>

<p>These tools should be available with your Linux distribution, as well
as from all of the Internet-based Linux archives. A number of other
backup utilities, with varying degrees of popularity and usability,
have been developed or ported for Linux. If you're
serious about backups, you should look into them.<a href="#FOOTNOTE-122">[122]</a><a name="IXTR3-3049" /> <a name="IXTR3-3050" /> 
</p><blockquote class="footnote"> <a name="FOOTNOTE-122" /><p> [122]Of
course, this section was written after the author took the first
backup of his Linux system in nearly four years of use!</p>
</blockquote>

<p>--<em class="emphasis">MW, MKD, and LK</em></p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch38_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch38_06.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">38.4. More Ways to Back Up</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">38.6. Restoring Files from Tape with tar</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2003</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,88,96" href="../index.htm"><area shape="rect" coords="90,0,165,96" href="../upt/index.htm"><area shape="rect" coords="168,1,253,107" href="../mac/index.htm"><area shape="rect" coords="255,0,335,97" href="../korn/index.htm"><area shape="rect" coords="337,0,415,109" href="../unixnut/index.htm"><area shape="rect" coords="417,0,512,122" href="../sedawk/index.htm"><area shape="rect" coords="514,0,605,105" href="../lunix/index.htm"><area shape="rect" coords="611,2,694,121" href="../vi/index.htm">
</map>

</body></html>