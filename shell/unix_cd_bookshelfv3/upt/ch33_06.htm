<html><head><title>Getting a List of Matching Files with grep -l (Unix Power Tools, 3rd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Shelley Powers, Jerry Peek, Tim O'Reilly, Mike Loukides and  " /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00330-7" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="UNIX Power Tools, 3rd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Unix Power Tools" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Unix Power Tools" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch33_05.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch33_07.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">33.6. Getting a List of Matching Files with grep -l</h2>

<p>Normally
<a name="IXT-33-3884" /><a name="IXT-33-3885" /> <a name="IXT-33-3886" />when you run <b class="emphasis-bold">grep</b> (<a href="ch13_01.htm#upt3-CHP-13-SECT-1">Section 13.1</a>) on a group
of files, the output lists the filename along with the line
containing the search pattern. Sometimes you want to know only the
names of the files, and you don't care to know the
line (or lines) that match. In this case, use the <span class="option">-l</span>
(lowercase letter "l") option to
list only filenames where matches occur. For example, the following
command:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>grep -l R6 </b></tt><em class="replaceable"><tt>file1 file2 ... </tt></em><tt class="userinput"><b>&gt; r6.filelist</b></tt></pre></blockquote>

<p>searches the files for a line containing the string
<tt class="literal">R6</tt>, produces a list of those filenames, and stores
the list in <em class="filename">r6.filelist</em>. (This list might
represent the files containing Release 6 documentation of a
particular product.) Because these Release 6 files can now be
referenced by one list, you can treat them as a single entity and run
various commands on them all at once:
</p>

<p><tt class="literal">'...'</tt> <a href="ch28_14.htm#upt3-CHP-28-SECT-14">Section 28.14</a></p>

<blockquote><pre class="code">% <tt class="userinput"><b>lpr `cat r6.filelist`         </b></tt><i class="lineannotation">Print only the Release 6 files</i>
% <tt class="userinput"><b>grep UNIX `cat r6.filelist`   </b></tt><i class="lineannotation">Search limited to the Release 5 files</i></pre></blockquote>

<p>You don't have to create a file list, though. You
can insert the output of a <i class="command">grep</i> directly into a
command line with command substitution. For example, to edit only the
subset of files containing <tt class="literal">R6</tt>, you would type:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>vi `grep -l R6 </b></tt><em class="replaceable"><tt>file1 file2 ...</tt></em>`</pre></blockquote>

<p>(Of course, you also could use a wildcard like
<em class="replaceable"><tt>file*</tt></em> instead of a list of filenames.)
</p>

<p><i class="command">grep -l</i> is also good for shell programs that need
to check whether a file contains a particular string. The traditional
way to do that test is by throwing away
<i class="command">grep</i>'s output and checking its
exit status:
</p>

<blockquote><pre class="code">if grep <em class="replaceable"><tt>something somefile</tt></em> &gt;/dev/null
then ...</pre></blockquote>

<p>If <em class="filename">somefile</em> is huge, though,
<i class="command">grep</i> has to search all of it. Adding the
<i class="command">grep -l</i> option saves time because
<i class="command">grep</i> can stop searching after it finds the first
matching line.
</p>

<p>--<em class="emphasis">DG and JP</em></p>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch33_05.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch33_07.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">33.5. Maybe You Shouldn't Use Wildcards in Pathnames</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">33.7. Getting a List of Nonmatching Files</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2003</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,88,96" href="../index.htm"><area shape="rect" coords="90,0,165,96" href="../upt/index.htm"><area shape="rect" coords="168,1,253,107" href="../mac/index.htm"><area shape="rect" coords="255,0,335,97" href="../korn/index.htm"><area shape="rect" coords="337,0,415,109" href="../unixnut/index.htm"><area shape="rect" coords="417,0,512,122" href="../sedawk/index.htm"><area shape="rect" coords="514,0,605,105" href="../lunix/index.htm"><area shape="rect" coords="611,2,694,121" href="../vi/index.htm">
</map>

</body></html>