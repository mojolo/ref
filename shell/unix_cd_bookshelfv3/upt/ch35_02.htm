<html><head><title>Everyone Should Learn Some Shell Programming (Unix Power Tools, 3rd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Shelley Powers, Jerry Peek, Tim O'Reilly, Mike Loukides and  " /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00330-7" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="UNIX Power Tools, 3rd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Unix Power Tools" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Unix Power Tools" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch35_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch35_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">35.2. Everyone Should Learn Some Shell Programming</h2>

<p><a name="IXT-35-3481" /><a name="IXT-35-3482" />One of the great things about Unix is that
it's made up of individual utilities,
"building blocks" like
<i class="command">cat</i> and <i class="command">grep</i>, that you run from
a shell prompt. Using pipes, redirection, filters, and so on, you can
combine those utilities to do an incredible number of things. Shell
programming lets you take the same commands you'd
type at a shell prompt and put them into a file you can run by just
typing its name. You can make new programs that combine Unix programs
(and other shell scripts) in your own way to do exactly what you
need. If you don't like the way a program works, you
can write a shell script to do just what you want.
</p>

<p>Because many Unix users use the shell every day, they
don't need to learn a whole new language for
programming, just some tips and techniques. In fact, this chapter
covers a lot of programming techniques that you'll
want to use even when you aren't programming. For
example, loops and tests are handy on the command line.
</p>

<p>(This series of articles does assume that you've
written programs in some language before or are generally familiar
with programming concepts. If you haven't and
aren't, you might start with a more comprehensive
shell programming book.)
</p>

<blockquote><table border="1" cellpadding="6"><tr><td>
<h4 class="objtitle">Summary Box</h4>
<p><a name="IXT-35-3483" /><a name="IXT-35-3484" /><a name="IXT-35-3485" />Unix has plenty of other
scripting languages -- Perl, Python, and Tcl/Tk are some of the
best known. So when should you write a script with the shell and when
shouldn't you? That's a personal
choice; as you learn more languages and their strengths and
weaknesses, you're better able to choose the best
one for a situation. My rule of thumb is something like this. I write
a shell script if:
</p>
&nbsp;
<ul><li>
<p>It's a script I developed at the command line, so
it's easy to just drop those same commands into a
file.
</p>
</li><li>
<p>I know some Unix utility that'll do just what I want.</p>
</li><li>
<p>It has to be portable to a system that might not have another
scripting language I'd rather use.
</p>
</li><li>
<p>The (possibly) slower speed of forking processes to run Unix
utilities (especially in loops) doesn't matter.
</p>
</li><li>
<p>The script simply has to make a few decisions -- like whether
standard input is a <b class="emphasis-bold">tty</b> (<a href="ch02_07.htm#upt3-CHP-2-SECT-7">Section 2.7</a>), checking options and arguments, or something
else simple) -- before the script ends by running some Unix
utility.
</p>
</li><li>
<p>It just feels natural to write a shell script, for whatever reason.</p>
</li></ul>
&nbsp;
<p>On the other hand, maybe your script needs lots of <b class="emphasis-bold">pipes ( | )</b> (<a href="ch01_05.htm#upt3-CHP-1-SECT-5">Section 1.5</a>) or
temporary files, or you have out-of-band data that you have to keep
passing in to each Unix utility (maybe because you
can't shoehorn multiple types of data into a single
chain of pipelines between utilities). In that case,
you'll be happier with a scripting language that
doesn't depend on Unix utilities and pipes.
</p>
&nbsp;
<p>Some of the topics you need to learn about as a beginning shell
programmer have already been covered in other chapters. Here are the
articles you'll probably want to read, in an order
that makes sense if you're looking for something of
a tutorial:
</p>
&nbsp;
<ul><li>
<p>To see how to write a simple shell program, <a href="ch35_01.htm#upt3-CHP-35-SECT-1">Section 35.1</a>. To embed scripts from other languages such as
<i class="command">sed</i> and <i class="command">awk</i> in a shell script,
<a href="ch35_19.htm#upt3-CHP-35-SECT-19">Section 35.19</a>.
</p>
</li><li>
<p>For explanation of shells in general, <a href="ch27_03.htm#upt3-CHP-27-SECT-3">Section 27.3</a>. 
</p>
</li><li>
<p>To read about environment and shell variables, <a href="ch35_03.htm#upt3-CHP-35-SECT-3">Section 35.3</a> and <a href="ch35_09.htm#upt3-CHP-35-SECT-9">Section 35.9</a>,
respectively.
</p>
</li><li>
<p>Shell quoting is explained in <a href="ch27_12.htm#upt3-CHP-27-SECT-12">Section 27.12</a>.</p>
</li><li>
<p>Stepping through arguments or any list of words with a
<i class="command">for</i> loop is discussed in <a href="ch28_09.htm#upt3-CHP-28-SECT-9">Section 28.9</a> (as well as in <a href="ch35_21.htm#upt3-CHP-35-SECT-21">Section 35.21</a>, later in this chapter).
</p>
</li></ul>
<p>Then, once you've had your refresher, come on back
and read the following articles:
</p>
&nbsp;
<ul><li>
<p>Test strings with a <i class="command">case</i> statement, <a href="ch35_10.htm#upt3-CHP-35-SECT-10">Section 35.10</a>. Match patterns in a <i class="command">case</i>
statement, <a href="ch35_11.htm#upt3-CHP-35-SECT-11">Section 35.11</a>.
</p>
</li><li>
<p>Use the output of one command as arguments to another command with
command substitution, <a href="ch28_14.htm#upt3-CHP-28-SECT-14">Section 28.14</a>.
</p>
</li><li>
<p>Find out whether a program worked or failed with its exit status,
<a href="ch35_12.htm#upt3-CHP-35-SECT-12">Section 35.12</a>.
</p>
</li><li>
<p>Loop through a set of commands and use another command to control
that loop, <a href="ch35_15.htm#upt3-CHP-35-SECT-15">Section 35.15</a>.
</p>
</li><li>
<p>Set exit status of a shell (shell script), <a href="ch35_16.htm#upt3-CHP-35-SECT-16">Section 35.16</a>. 
</p>
</li><li>
<p>Handle interrupts (like CTRL-c) and other signals, <a href="ch35_17.htm#upt3-CHP-35-SECT-17">Section 35.17</a>. 
</p>
</li><li>
<p>Read input from the keyboard, <a href="ch35_18.htm#upt3-CHP-35-SECT-18">Section 35.18</a>.</p>
</li><li>
<p>Handle command-line arguments (options, filenames, etc.), <a href="ch35_20.htm#upt3-CHP-35-SECT-20">Section 35.20</a>.
</p>
</li>
&nbsp;
<li>
<p>Test a program's exit status and do different things
if it worked or failed, <a href="ch35_13.htm#upt3-CHP-35-SECT-13">Section 35.13</a> and
<a href="ch35_14.htm#upt3-CHP-35-SECT-14">Section 35.14</a>.
</p>
</li><li>
<p>Handle arguments with the <i class="command">while</i> and
<i class="command">shift</i> commands, <a href="ch35_22.htm#upt3-CHP-35-SECT-22">Section 35.22</a>. 
</p>
</li><li>
<p>Handle command-line arguments in a more standard and portable way
with <i class="command">getopt</i>, <a href="ch35_24.htm#upt3-CHP-35-SECT-24">Section 35.24</a>.
</p>
</li><li>
<p>Set shell options and command-line arguments with the
<i class="command">set</i> command, <a href="ch35_25.htm#upt3-CHP-35-SECT-25">Section 35.25</a>.
</p>
</li><li>
<p>Test files and strings of characters with the <i class="command">test</i>
command, <a href="ch35_26.htm#upt3-CHP-35-SECT-26">Section 35.26</a>.
</p>
</li><li>
<p>Pick a name for a new command with no conflict, <a href="ch35_27.htm#upt3-CHP-35-SECT-27">Section 35.27</a>. 
</p>
</li><li>
<p>Find the name of a program and use it in the script, <a href="ch35_28.htm#upt3-CHP-35-SECT-28">Section 35.28</a>. 
</p>
</li><li>
<p>Use "subprograms" that can change
the current environment, <a href="ch35_29.htm#upt3-CHP-35-SECT-29">Section 35.29</a>.
</p>
</li></ul></td></tr></table><p></blockquote>

<p>This chapter discusses only Bourne shell programming. We
don't cover many features from more advanced
Bourne-type shells, like <i class="command">bash</i> and
<i class="command">zsh</i>, because those can make your shell scripts
nonportable; we stick to concepts that should work almost anywhere.
Also, in most cases, the C shell isn't great for
shell programming.
</p>

<p><a name="IXT-35-3486" />A
note about command versions: unfortunately, the same commands on
different versions of Unix can have different options. Some Bourne
shells are a little different from others. For instance, some
<b class="emphasis-bold">test</b> (<a href="ch35_26.htm#upt3-CHP-35-SECT-26">Section 35.26</a>)
commands have a <span class="option">-x</span> option to test for an executable
file; others don't. Some <i class="command">echo</i>
commands use a <span class="option">-n</span> option to mean
"no newline at the end of this
string"; others have you put <tt class="literal">\c</tt>
at the end of the string. And so on. Where there are differences,
these articles generally use the commands in original Berkeley Unix
from the 1980s. If a command doesn't seem to work on
your system, check its online manual page or the
<i class="command">sh</i> manual page.
</p>

<p> <em class="emphasis">-- JP</em></p>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch35_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch35_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">35. Shell Programming for the Uninitiated</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">35.3. What Environment Variables Are Good For</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2003</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,88,96" href="../index.htm"><area shape="rect" coords="90,0,165,96" href="../upt/index.htm"><area shape="rect" coords="168,1,253,107" href="../mac/index.htm"><area shape="rect" coords="255,0,335,97" href="../korn/index.htm"><area shape="rect" coords="337,0,415,109" href="../unixnut/index.htm"><area shape="rect" coords="417,0,512,122" href="../sedawk/index.htm"><area shape="rect" coords="514,0,605,105" href="../lunix/index.htm"><area shape="rect" coords="611,2,694,121" href="../vi/index.htm">
</map>

</body></html>