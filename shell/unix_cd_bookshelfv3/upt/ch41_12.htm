<html><head><title>Make Custom grep Commands (etc.) with Perl (Unix Power Tools, 3rd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Shelley Powers, Jerry Peek, Tim O'Reilly, Mike Loukides and  " /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00330-7" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="UNIX Power Tools, 3rd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Unix Power Tools" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Unix Power Tools" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch41_11.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch41_13.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">41.12. Make Custom grep Commands (etc.) with Perl</h2>

<p>All of the various <i class="command">grep</i>-like utilities perform
pretty much the same function, with minor differences -- they
search for a specified pattern in some or all of a file and display
that pattern with varying amounts of surrounding context.
</p>

<p>As you use Unix more and more, you will find yourself wanting to do
an increasing number of <i class="command">grep</i>-like tasks, but no
particular Unix utility will quite suit them all (hence the need for
the various <i class="command">grep</i> utilities discussed earlier).
You'll start accumulating C programs,
<i class="command">awk</i> scripts, and shell scripts to do these
different tasks, and you'll be craving one utility
that can easily encompass them all so you don't have
to waste the disk space for all of those binaries. That utility is
<b class="emphasis-bold">Perl</b> (<a href="ch41_01.htm#upt3-CHP-41-SECT-1">Section 41.1</a>),
the "Practical Extraction and Report
Language" developed by Larry Wall. According to the
documentation accompanying Perl, it is "an
interpreted language optimized for scanning arbitrary text files,
extracting information from those text files, and printing reports
based on that information."
</p>

<p>For example, to search for a pattern in the header of a Usenet
message:
</p>

<blockquote><pre class="code">perl -ne 'exit if (/^$/); print if (/<em class="replaceable"><tt>pattern</em>/);' <em class="replaceable">filename</tt></em></pre></blockquote>

<p>[This works because <b class="emphasis-bold">mail and Usenet</b>
(<a href="ch01_21.htm#upt3-CHP-1-SECT-21">Section 1.21</a>) messages always use a blank
line -- indicated by <tt class="literal">^$</tt> in regular expression
syntax -- to separate the header from the body of the message.
 -- <em class="emphasis">TOR</em>]
</p>

<p>[The <tt class="literal">-n</tt> flag tells <i class="command">perl</i> to wrap
the contents of <tt class="literal">-e</tt> into the body of a
<tt class="literal">while(&lt;&gt;){ ... }</tt> loop.
 -- <em class="emphasis">JJ</em>]
</p>

<p>To do a search for a pattern and print the paragraphs in which it
appears:
</p>

<blockquote><pre class="code">perl -ne '$/ = "\n\n"; print if (/<em class="replaceable"><tt>pattern</em>/);' <em class="replaceable">filename</tt></em></pre></blockquote>

<p>[This assumes that paragraphs are delimited by a double
linefeed -- that is, a blank line. You'd have to
adjust this script for a <i class="command">troff</i> or
T<sub class="subscript">E</sub>X document where paragraphs are separated by
special codes.  -- <em class="emphasis">TOR</em>]
</p>

<p>Searching through files is one of Perl's strengths,
but certainly not its only strength. Perl encompasses all the
functionality of <i class="command">sed</i>, <i class="command">awk</i>,
<i class="command">grep</i>, <i class="command">find</i>, and other Unix
utilities. Furthermore, a Perl program to do something originally
done with one or more of these utilities is usually faster and easier
to read than the non-Perl solution.
</p>

<p> <em class="emphasis">-- JIK</em></p>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch41_11.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch41_13.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">41.11. CPAN</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">41.13. Perl and the Internet</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2003</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,88,96" href="../index.htm"><area shape="rect" coords="90,0,165,96" href="../upt/index.htm"><area shape="rect" coords="168,1,253,107" href="../mac/index.htm"><area shape="rect" coords="255,0,335,97" href="../korn/index.htm"><area shape="rect" coords="337,0,415,109" href="../unixnut/index.htm"><area shape="rect" coords="417,0,512,122" href="../sedawk/index.htm"><area shape="rect" coords="514,0,605,105" href="../lunix/index.htm"><area shape="rect" coords="611,2,694,121" href="../vi/index.htm">
</map>

</body></html>