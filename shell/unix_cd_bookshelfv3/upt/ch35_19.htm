<html><head><title>Shell Script "Wrappers" for awk, sed, etc. (Unix Power Tools, 3rd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Shelley Powers, Jerry Peek, Tim O'Reilly, Mike Loukides and  " /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00330-7" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="UNIX Power Tools, 3rd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Unix Power Tools" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Unix Power Tools" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch35_18.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch35_20.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">35.19. Shell Script "Wrappers" for awk, sed, etc.</h2>

<p><a name="IXT-35-3696" /><a name="IXT-35-3697" /><a name="IXT-35-3698" />Although most scripts for most
languages can <b class="emphasis-bold">execute directly</b>
(<a href="ch36_03.htm#upt3-CHP-36-SECT-3">Section 36.3</a>) without needing the Bourne shell,
it's common to
"wrap" other scripts in a shell
script to take advantage of the shell's strengths.
For instance, <i class="command">sed</i> can't accept
arbitrary text on its command line, only commands and filenames. So
you can let the shell <b class="emphasis-bold">handle the command
line</b> (<a href="ch35_20.htm#upt3-CHP-35-SECT-20">Section 35.20</a>) and pass information
to <i class="command">sed</i> via shell variables, command substitution,
and so on. Simply use correct <b class="emphasis-bold">quoting</b> (<a href="ch27_12.htm#upt3-CHP-27-SECT-12">Section 27.12</a>) to pass
information from the shell into the
"wrapped" <i class="command">sed</i>
script:
</p>

<p><tt class="literal">||</tt> <a href="ch35_14.htm#upt3-CHP-35-SECT-14">Section 35.14</a></p>

<blockquote><pre class="code">#!/bin/sh
# seder - cd to directory in first command-line argument ($1),
# read all files and substitute $2 with $3, write result to stdout
cd "$1" || exit
sed "s/$2/$3/g" *</pre></blockquote>

<p><a name="IXT-35-3699" /><a name="IXT-35-3700" />In <em class="emphasis">SunExpert</em>
magazine, in his article on <i class="command">awk</i> (January, 1991),
Peter Collinson suggests a stylization similar to this for
<i class="command">awk</i> programs in <b class="emphasis-bold">shell
scripts</b> (<a href="ch35_02.htm#upt3-CHP-35-SECT-2">Section 35.2</a>):
</p>

<blockquote><pre class="code">#!/bin/sh
awkprog='
/foo/{print $3}
/bar/{print $4}'

awk "$awkprog" $*</pre></blockquote>

<p>He argues that this is more intelligible in long pipelines because it
separates the program from the command. For example:
</p>

<blockquote><pre class="code">grep foo $input | sed .... | awk "$awkprog" - | ...</pre></blockquote>

<p>Not everyone is thrilled by the
"advantages" of writing
<i class="command">awk</i> this way, but it's true that
there are disadvantages to writing <i class="command">awk</i> the
standard way.
</p>

<p>Here's an even more complex variation:</p>

<p><tt class="literal">&lt;&lt;\</tt> <a href="ch27_16.htm#upt3-CHP-27-SECT-16">Section 27.16</a></p>
<blockquote><pre class="code">#!/bin/sh
temp=/tmp/awk.prog.$$
cat &gt; $temp &lt;&lt;\END
/foo/{print $3}
/bar/{print $4}
END
awk -f $temp $1
rm -f $temp</pre></blockquote>

<p><a name="IXT-35-3701" /><a name="IXT-35-3702" />This version makes it a bit easier to
create complex programs dynamically. The final <i class="command">awk</i>
command becomes the equivalent of a shell <b class="emphasis-bold">eval</b> (<a href="ch27_08.htm#upt3-CHP-27-SECT-8">Section 27.8</a>); it
executes something that has been built up at runtime. The first
strategy (program in shell variable) could also be massaged to work
this way.
</p>

<p><a name="IXT-35-3703" /><a name="IXT-35-3704" />As another
example, a program that I used once was really just one long
pipeline, about 200 lines long. Huge <i class="command">awk</i> scripts
and <i class="command">sed</i> scripts intervened in the middle. As a
result, it was almost completely unintelligible. But if you start
each program with a comment block and end it with a pipe, the result
can be fairly easy to read. It's more direct than
using big shell variables or temporary files, especially if there are
several scripts.
</p>

<blockquote><pre class="code">#
# READ THE FILE AND DO XXX WITH awk:
#
awk '
   ...<em class="replaceable"><tt>the indented awk program</tt></em>...
   ...
   ...
' <tt class="userinput"><b>|</b></tt>
#
# SORT BY THE FIRST FIELD, THEN BY XXX:
#
sort +0n -1 +3r <tt class="userinput"><b>|</b></tt>
#
# MASSAGE THE LINES WITH sed AND XXX:
#
sed '
   ...</pre></blockquote>

<p><a name="IXT-35-3705" />Multiline pipes like
that one are uglier in the C shell because <b class="emphasis-bold">each
line has to end with a backslash (\)</b> (<a href="ch27_13.htm#upt3-CHP-27-SECT-13">Section 27.13</a>). <a href="ch27_12.htm#upt3-CHP-27-SECT-12">Section 27.12</a> and
<a href="ch27_13.htm#upt3-CHP-27-SECT-13">Section 27.13</a> have more about quoting.
</p>

<p><em class="emphasis">--ML and JP</em></p>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch35_18.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch35_20.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">35.18. read: Reading from the Keyboard</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">35.20. Handling Command-Line Arguments in Shell Scripts</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2003</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,88,96" href="../index.htm"><area shape="rect" coords="90,0,165,96" href="../upt/index.htm"><area shape="rect" coords="168,1,253,107" href="../mac/index.htm"><area shape="rect" coords="255,0,335,97" href="../korn/index.htm"><area shape="rect" coords="337,0,415,109" href="../unixnut/index.htm"><area shape="rect" coords="417,0,512,122" href="../sedawk/index.htm"><area shape="rect" coords="514,0,605,105" href="../lunix/index.htm"><area shape="rect" coords="611,2,694,121" href="../vi/index.htm">
</map>

</body></html>