<html><head><title>lookfor: Which File Has That Word? (Unix Power Tools, 3rd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Shelley Powers, Jerry Peek, Tim O'Reilly, Mike Loukides and  " /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00330-7" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="UNIX Power Tools, 3rd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Unix Power Tools" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Unix Power Tools" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch09_21.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch09_23.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">9.22. lookfor: Which File Has That Word?</h2>

<p><a name="IXT-9-145" /><a name="IXT-9-146" /> <a name="IXT-9-147" /> <a name="IXT-9-148" />The following simple shell script,
<em class="filename">lookfor</em>, uses <em class="emphasis">find</em> to look for all files in the specified
directory hierarchy that have been modified within a certain time,
and it passes the resulting names to <em class="emphasis">grep</em> to scan for a particular pattern. For
example, the command:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>lookfor /work -7 tamale enchilada</b></tt></pre></blockquote>

<p>would search through the entire <em class="filename">/work</em> filesystem
and print the names of all files modified within the past week that
contain the words "tamale" or
"enchilada." (For example, if this
article is stored in <em class="filename">/work</em>,
<em class="filename">lookfor</em> should find it.)
</p>

<p>The arguments to the script are the pathname of a directory hierarchy
to search in (<tt class="literal">$1</tt>), a time (<tt class="literal">$2</tt>),
and one or more text patterns (the other arguments). This simple but
slow version will search for an (almost) unlimited number of words:
</p>

<blockquote><pre class="code">#!/bin/sh
temp=/tmp/lookfor$$
trap 'rm -f $temp; exit' 0 1 2 15
find $1 -mtime $2 -print &gt; $temp
shift; shift
for word
do grep -i "$word" `cat $temp` /dev/null
done</pre></blockquote>

<p>That version runs <em class="filename">grep</em><a name="IXT-9-149" /> once to search for each word. The
<em class="filename">-i</em> option makes the search find either upper- or
lowercase letters. Using
<em class="filename">/dev/null</em><a name="IXT-9-150" /> makes sure that
<em class="filename">grep</em> will print the filename. Watch out, though:
the list of filenames may get too long.
</p>

<p>The next version is more limited but faster. It builds a
<a name="IXT-9-151" /> <a name="IXT-9-152" /> <a name="IXT-9-153" />regular expression for
<em class="filename">egrep</em> that finds all the words in one pass
through the files. If you use too many words,
<em class="filename">egrep</em> will say <tt class="literal">Regular</tt>
<tt class="literal">expression</tt> <tt class="literal">too</tt>
<tt class="literal">long</tt>. Also, your <em class="filename">egrep</em> may
not have a <em class="filename">-i</em> option; you can just omit it. This
version also uses <em class="filename">xargs</em>; though
<em class="filename">xargs</em> has its problems.
</p>

<blockquote><pre class="code">#!/bin/sh
where="$1"
when="$2"
shift; shift
# Build egrep expression like (word1|word2|...) in $expr
for word
do
    case "$expr" in
    "") expr="($word" ;;
    *) expr="$expr|$word" ;;
    esac
done
expr="$expr)"
  
find $where -mtime $when -print | xargs egrep -i "$expr" /dev/null</pre></blockquote>

<p><em class="emphasis">--JP and TOR</em></p>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch09_21.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch09_23.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">9.21. grepping a Directory Tree</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">9.23. Using Shell Arrays to Browse Directories</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2003</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,88,96" href="../index.htm"><area shape="rect" coords="90,0,165,96" href="../upt/index.htm"><area shape="rect" coords="168,1,253,107" href="../mac/index.htm"><area shape="rect" coords="255,0,335,97" href="../korn/index.htm"><area shape="rect" coords="337,0,415,109" href="../unixnut/index.htm"><area shape="rect" coords="417,0,512,122" href="../sedawk/index.htm"><area shape="rect" coords="514,0,605,105" href="../lunix/index.htm"><area shape="rect" coords="611,2,694,121" href="../vi/index.htm">
</map>

</body></html>