<html><head><title>Who Handles Wildcards? (Unix Power Tools, 3rd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Shelley Powers, Jerry Peek, Tim O'Reilly, Mike Loukides and  " /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00330-7" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="UNIX Power Tools, 3rd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Unix Power Tools" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Unix Power Tools" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch33_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch33_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">33.3. Who Handles Wildcards?</h2>

<p><b class="emphasis-bold">Wildcards</b> (<a href="ch01_13.htm#upt3-CHP-1-SECT-13">Section 1.13</a>) <a name="upt3-IDXTERM-5149" /> <a name="upt3-IDXTERM-5150" /> <a name="upt3-IDXTERM-5151" />are
actually defined by the Unix shells, rather than the Unix filesystem.
In theory, a new shell could define new wildcards, and consequently,
we should discuss wildcarding when we discuss the shell. In practice,
all Unix shells (including <b class="emphasis-bold">ksh, bash, and other
variants</b> (<a href="ch01_06.htm#upt3-CHP-1-SECT-6">Section 1.6</a>)) honor the same
wildcard conventions, and we don't expect to see
anyone change the rules. (But most new shells also have <b class="emphasis-bold">extended wildcards</b> (<a href="ch33_02.htm#upt3-CHP-33-SECT-2">Section 33.2</a>). And different shells do different things
<b class="emphasis-bold">when a wildcard doesn't
match</b> (<a href="ch33_04.htm#upt3-CHP-33-SECT-4">Section 33.4</a>).)
</p>

<p>You may see different wildcarding if you have a special-purpose shell
that emulates another <a name="IXT-33-3863" />operating system (for example, a shell
that looks like the COMMAND.COM in MS-DOS) -- in this case, your
shell will obey the other operating system's
wildcard rules. But even in this case, operating system designers
stick to a reasonably similar set of wildcard rules.
</p>

<p>The fact that the shell defines wildcards, rather than the filesystem
itself or the program you're running, has some
important implications for a few commands. Most of the time, a
program never sees wildcards. For example, the result of typing:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>lpr *</b></tt></pre></blockquote>

<p>is exactly the same as typing:</p>

<blockquote><pre class="code">% <tt class="userinput"><b>lpr </b></tt><em class="replaceable"><tt>file1 file2 file3 file4 file5</tt></em></pre></blockquote>

<p><a name="IXT-33-3864" />In this case everything works as
expected. But there are other situations in which wildcards
don't work at all. Assume you want to read some
files from a tape, which requires the command <b class="emphasis-bold">tar x</b> (<a href="ch38_06.htm#upt3-CHP-38-SECT-6">Section 38.6</a>), so you
type the command <tt class="literal">tar x *.txt</tt>. Will you be happy or
disappointed?
</p>

<p>You'll be disappointed -- unless older versions
of the files you want are already in your <b class="emphasis-bold">current directory</b> (<a href="ch01_16.htm#upt3-CHP-1-SECT-16">Section 1.16</a>). The shell expands the wildcard
<tt class="literal">*.txt</tt>, according to what's in the
current directory, <em class="emphasis">before it hands the completed command
line over to tar for execution</em>. All <i class="command">tar</i>
gets is a list of files. But you're probably not
interested in the current directory; you probably want the wildcard
<tt class="literal">*</tt> to be expanded on the tape, retrieving any
<tt class="literal">*.txt</tt> files that the tape has.
</p>

<p><a name="IXT-33-3865" />There's a way
to pass wildcards to programs, without having them interpreted by the
shell. Simply put <tt class="literal">*.txt</tt> in <b class="emphasis-bold">quotes</b> (<a href="ch27_12.htm#upt3-CHP-27-SECT-12">Section 27.12</a>).
<a name="IXT-33-3866" /><a name="IXT-33-3867" />The quotes prevent the Unix shell
from expanding the wildcard, passing it to the command unchanged.
Programs that can be used in this way (like <b class="emphasis-bold">ssh
and scp</b> (<a href="ch46_06.htm#upt3-CHP-46-SECT-6">Section 46.6</a>)) know how to handle
wildcards, obeying the same rules as the shell (in fact, these
programs usually start a shell to interpret their arguments). You
only need to make sure that the programs see the wildcards, that they
aren't stripped by the shell before it passes the
command line to the program. As a more general rule, you should be
aware of when and why a wildcard gets expanded, and you should know
how to make sure that wildcards are expanded at an appropriate time.
</p>

<a name="ch33-3-fm2xml" /><blockquote><b>NOTE:</b> 
<a name="IXT-33-3868" /><a name="IXT-33-3869" />If your shell understands the
<b class="emphasis-bold">{} characters</b> (<a href="ch28_04.htm#upt3-CHP-28-SECT-4">Section 28.4</a>), you can use them because they can generate
any string -- not just filenames that already exist. You have to
type the unique part of each name, but you only have to type the
common part once. For example, to extract the files called
<em class="emphasis">project/wk9/summary</em>,
<em class="emphasis">project/wk14/summary</em>, and
<em class="emphasis">project/wk15/summary</em> from a
<i class="command">tar</i> tape or file, you might use:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>tar xv project/wk{9,14,15}/summary</b></tt>
x project/wk9/summary, 3161 bytes, 7 tape blocks
x project/wk14/summary, 878 bytes, 2 tape blocks
x project/wk15/summary, 2268 bytes, 5 tape blocks</pre></blockquote>
</blockquote>

<p>Some versions of <i class="command">tar</i> understand wildcards, but
many don't. There is a <b class="emphasis-bold">clever
workaround</b> (<a href="ch38_10.htm#upt3-CHP-38-SECT-10">Section 38.10</a>).<a name="IXTR3-3900" /> <a name="IXTR3-3901" /> <a name="IXTR3-3902" />
</p>

<p> <em class="emphasis">-- ML</em></p>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch33_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch33_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">33.2. Filename Wildcards in a Nutshell</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">33.4. What if a Wildcard Doesn't Match?</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2003</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,88,96" href="../index.htm"><area shape="rect" coords="90,0,165,96" href="../upt/index.htm"><area shape="rect" coords="168,1,253,107" href="../mac/index.htm"><area shape="rect" coords="255,0,335,97" href="../korn/index.htm"><area shape="rect" coords="337,0,415,109" href="../unixnut/index.htm"><area shape="rect" coords="417,0,512,122" href="../sedawk/index.htm"><area shape="rect" coords="514,0,605,105" href="../lunix/index.htm"><area shape="rect" coords="611,2,694,121" href="../vi/index.htm">
</map>

</body></html>