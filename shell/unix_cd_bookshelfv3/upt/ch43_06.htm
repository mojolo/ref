<html><head><title>Safe I/O Redirection with noclobber (Unix Power Tools, 3rd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Shelley Powers, Jerry Peek, Tim O'Reilly, Mike Loukides and  " /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00330-7" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="UNIX Power Tools, 3rd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Unix Power Tools" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Unix Power Tools" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch43_05.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch43_07.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">43.6. Safe I/O Redirection with noclobber</h2>

<p><a name="IXT-43-2282" /><a name="IXT-43-2283" /><a name="IXT-43-2284" /><a name="IXT-43-2285" />Have you ever destroyed a file
accidentally? If you set the <em class="emphasis">noclobber</em> C shell
variable or the <em class="emphasis">noclobber</em> option in
<i class="command">bash</i>, <i class="command">zsh</i>, and
<i class="command">ksh</i>, it can help you avoid these mistakes. Setting
<em class="emphasis">noclobber</em> prevents you from destroying a file
when you are <b class="emphasis-bold">redirecting standard
output</b> (<a href="ch43_01.htm#upt3-CHP-43-SECT-1">Section 43.1</a>).
</p>

<p>Consider the following situation:</p>

<blockquote><pre class="code">% <em class="replaceable"><tt>anycommand</tt></em> <tt class="userinput"><b>&gt; outputfile</b></tt></pre></blockquote>

<p>The command above overwrites the old <em class="emphasis">outputfile</em>.
If you have misspelled the name of your output file, or if you have
forgotten that the file already exists and contains important data,
or (most common) if you really meant to type
<tt class="literal">&gt;&gt;</tt> instead of <tt class="literal">&gt;</tt> (i.e.,
if you really meant to append to the end of
<em class="emphasis">outputfile</em>, rather than start a new one), tough
luck; your old data is gone.
</p>

<p>Setting <em class="emphasis">noclobber</em> prevents this problem. If
<em class="emphasis">noclobber</em> is set, the shell will not allow I/O
redirection to destroy an existing file, unless you explicitly tell
it to by adding an exclamation point (<tt class="literal">!</tt>) after the
C shell redirect symbol or by adding a <a name="IXT-43-2286" />vertical bar (<tt class="literal">|</tt>) in
<i class="command">ksh</i> and <i class="command">bash</i>. (The Z shell
understands both.) Here are examples. The left column shows
<i class="command">csh</i> and <i class="command">tcsh</i>; the right column
is for <i class="command">bash</i> (<i class="command">ksh</i> is similar):
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>set noclobber</b></tt>              $ <tt class="userinput"><b>set -o noclobber</b></tt>
% <tt class="userinput"><b>ls</b></tt>                         $ <tt class="userinput"><b>ls</b></tt>
filea fileb                  filea fileb
% <tt class="userinput"><b>anyprogram &gt; fileb</b></tt>         $ <tt class="userinput"><b>anyprogram &gt; fileb</b></tt>
fileb: File exists.          bash: fileb: Cannot clobber existing file
% <tt class="userinput"><b>anyprogram &gt;! fileb</b></tt>        $ <tt class="userinput"><b>anyprogram &gt;| fileb</b></tt>
%                            $</pre></blockquote>

<p>Be sure to put space after the <tt class="literal">!</tt>. If you
don't, the C shell thinks you're
making a history reference and it (usually) prints an error like
<tt class="literal">fileb: Event not found</tt>.
</p>

<p>Remember that <em class="emphasis">noclobber</em> is not an environment
variable, so any new shells you create <b class="emphasis-bold">won't inherit it</b> (<a href="ch35_09.htm#upt3-CHP-35-SECT-9">Section 35.9</a>). Therefore, if you want this feature, put the
<i class="command">set</i> command (above) in your
shell's <b class="emphasis-bold">setup file</b>
(<a href="ch03_03.htm#upt3-CHP-3-SECT-3">Section 3.3</a>).
</p>

<a name="ch43-3-fm2xml" /><blockquote><b>NOTE:</b> 
In some shells, <em class="emphasis">noclobber</em> will prevent you from
redirecting standard output to <b class="emphasis-bold">/dev/null</b> (<a href="ch43_12.htm#upt3-CHP-43-SECT-12">Section 43.12</a>) or to
a terminal unless you add the <tt class="literal">!</tt>.
</p>
</blockquote>

<p>The <em class="emphasis">noclobber</em> variable has one other feature
that's worth noting. Normally, shells let you append
to a file that doesn't exist. If
<em class="emphasis">noclobber</em> is set under <i class="command">csh</i>,
<i class="command">tcsh</i>, and <i class="command">zsh</i>, it
won't; you can append only to files that already
exist unless you use an exclamation point:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>ls</b></tt>
filea fileb
% <em class="replaceable"><tt>anyprogram </tt></em><tt class="userinput"><b>&gt;&gt; filec</b></tt>
filec: No such file or directory
% <em class="replaceable"><tt>anyprogram </tt></em><tt class="userinput"><b>&gt;&gt;! filec</b></tt>
%</pre></blockquote>

<p><em class="emphasis">--ML and JP</em></p>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch43_05.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch43_07.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">43.5. Redirection in C Shell: Capture Errors, Too?</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">43.7. The ( ) Subshell Operators</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2003</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,88,96" href="../index.htm"><area shape="rect" coords="90,0,165,96" href="../upt/index.htm"><area shape="rect" coords="168,1,253,107" href="../mac/index.htm"><area shape="rect" coords="255,0,335,97" href="../korn/index.htm"><area shape="rect" coords="337,0,415,109" href="../unixnut/index.htm"><area shape="rect" coords="417,0,512,122" href="../sedawk/index.htm"><area shape="rect" coords="514,0,605,105" href="../lunix/index.htm"><area shape="rect" coords="611,2,694,121" href="../vi/index.htm">
</map>

</body></html>