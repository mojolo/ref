<html><head><title>Save Time and Typing with the vi map Commands (Unix Power Tools, 3rd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Shelley Powers, Jerry Peek, Tim O'Reilly, Mike Loukides and  " /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00330-7" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="UNIX Power Tools, 3rd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Unix Power Tools" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Unix Power Tools" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch18_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch18_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<a name="upt3-IDXTERM-2582" /><a name="upt3-IDXTERM-2583" /><h2 class="sect1">18.2. Save Time and Typing with the vi map Commands</h2>

<p><a name="upt3-IDXTERM-2584" />While <a name="upt3-IDXTERM-2585" /> <a name="upt3-IDXTERM-2586" />you're editing, you may find
that you are using a command sequence frequently, or you may
occasionally use a very complex command sequence. To save yourself
keystrokes -- or the time it takes to remember the
sequence -- assign the sequence to an unused key by using the
<tt class="literal">map</tt> and <tt class="literal">map!</tt> commands.
</p>

<a name="upt3-CHP-18-SECT-2.1" /><div class="sect2">
<h3 class="sect2">18.2.1. Command Mode Maps</h3>

<p><a name="IXT-18-1681" />The <tt class="literal">map</tt> command acts a
lot like <b class="emphasis-bold">ab</b> (<a href="ch17_23.htm#upt3-CHP-17-SECT-23">Section 17.23</a>) except that you define a macro for command
mode instead of text-input mode. The <tt class="literal">map!</tt> command
works during text-input mode; see the following list.
</p>

<dl>
<dt><tt class="literal">map</tt> <tt><em class="replaceable">x sequence</em></tt></dt>
<dd>
Define <em class="emphasis">x</em></tt> as a <em class="emphasis">sequence</em></tt> of
editing commands.
</p>
</dd>


<dt><tt class="literal">unmap</tt> <tt><em class="replaceable">x</em></tt></dt>
<dd>
Disable the <em class="emphasis">x</em> definition.</p>
</dd>


<dt><tt class="literal">map</tt></dt>
<dd>
List the characters that are currently mapped.</p>
</dd>

</dl>

<p>As with other <i class="command">ex</i>-mode commands, these map commands
can be saved in your <b class="emphasis-bold">.exrc file</b>
(<a href="ch17_30.htm#upt3-CHP-17-SECT-30">Section 17.30</a>) or typed in after a colon (:). If you
want a keymap to use just during this editing session, you might find
that <b class="emphasis-bold">vi @-functions</b> (<a href="ch18_04.htm#upt3-CHP-18-SECT-4">Section 18.4</a>) are easier to create and use. The map
commands are best for keymaps that you save in your
<em class="emphasis">.exrc</em></tt> file and use during many editing sessions.
</p>

<p>Before you can start creating your own maps, you need to know the
keys not used in command mode that are available for user-defined
commands. Here's a list of the unused keys in
original <i class="command">vi</i>: <a name="IXT-18-1682" />
</p>

<dl>
<dt><i>Letters</i></dt>
<dd>
<tt class="literal">g K q V v</tt></p>
</dd>


<dt><i>Control keys</i></dt>
<dd>
<tt class="literal">^A ^K ^O ^T ^W ^X</tt></p>
</dd>


<dt><i>Symbols</i></dt>
<dd>
<tt class="literal">_ * \ =</tt> </p>
</dd>

</dl>

<a name="ch18-4-fm2xml" /><blockquote><b>NOTE:</b> 
The = is used by <i class="command">vi</i> if Lisp mode is set. In
addition, other letters such as v may already be used in other
systems.
</p>
</blockquote>

<p>With maps you can create simple or complex command sequences. As a
simple example, you could define a command to reverse the order of
words. In <i class="command">vi</i>, with the cursor as shown:
</p>

<blockquote><pre class="code">you can the scroll page</pre></blockquote>

<p>the sequence to put <em class="emphasis">the</em> after
<em class="emphasis">scroll</em> would be <tt class="literal">dwwP</tt>: (delete
word), <tt class="literal">dw</tt>; (move to the next word),
<tt class="literal">w</tt>; (put the deleted word before that word),
<tt class="literal">P</tt>. (You can also use <tt class="literal">W</tt> instead
of <tt class="literal">w</tt>.) Saving this sequence:
</p>

<blockquote><pre class="code">map v dwwP</pre></blockquote>

<p>enables you to reverse the order of two words at any time in the
editing session with the single keystroke <tt class="literal">v</tt>.
</p>

<p>You can also map certain multiple-character sequences. Start the map
with one of the symbols in the previous list. For example, to map the
keystrokes <tt class="literal">*s</tt> to put single quotes around a word
(<tt class="literal">'</tt><em class="replaceable"><tt>word</tt></em><tt class="literal">'</tt>)
and <tt class="literal">*d</tt> to use double quotes
(<tt class="literal">"</tt><em class="replaceable"><tt>word</tt></em><tt class="literal">"</tt>):
</p>

<p><tt class="literal">^[</tt> <a href="ch18_06.htm#upt3-CHP-18-SECT-6">Section 18.6</a></p>

<blockquote><pre class="code">map *s Ea'^[Bi'^[
map *d Ea"^[Bi"^[</pre></blockquote>

<p><a name="IXT-18-1683" />Now you'll be able to make
hundreds of keymaps (though your version of <i class="command">vi</i>
probably has a limit).
</p>

<p>You may also be able to associate map sequences with your
terminal's function keys if your <b class="emphasis-bold">termcap or terminfo entry</b>
(<a name="IXT-18-1684" /><a name="IXT-18-1685" /><a href="ch05_02.htm#upt3-CHP-5-SECT-2">Section 5.2</a>) defines those keys. For example, to make
function key F1 transpose words:
</p>

<blockquote><pre class="code">map #1 dwelp</pre></blockquote>

<a name="ch18-6-fm2xml" /><blockquote><b>NOTE:</b> 
Map assignments are not really limited to unused keys. You can map
keys that are defined as other <i class="command">vi</i> commands, but
then the key's original meaning is inaccessible.
This is probably okay if the key is tied to a command that you rarely
use. There's more information in <a href="ch18_12.htm#upt3-CHP-18-SECT-12">Section 18.12</a> about the <em class="emphasis">noremap</em> option.
</p>
</blockquote>

</div>
<a name="upt3-CHP-18-SECT-2.2" /><div class="sect2">
<h3 class="sect2">18.2.2. Text-Input Mode Maps</h3>

<p><a name="IXT-18-1686" />The <tt class="literal">map!</tt> command
works like <tt class="literal">map</tt>, but <tt class="literal">map!</tt> works
during text-input mode. You actually set the <tt class="literal">map!</tt>
during command mode, in the same way as a plain
<tt class="literal">map</tt>: at a colon (:) prompt. Type
<tt class="literal">map!</tt> followed by a space and the key(s) that
activate the map; then type a space and the text for which the
text-input mode map stands. These text-input mode maps are a lot like
<b class="emphasis-bold">abbreviations</b> (<a href="ch17_23.htm#upt3-CHP-17-SECT-23">Section 17.23</a>); the difference is that
<tt class="literal">map!</tt> lets your keymap switch from text-input mode
to command mode, execute commands, then go back to text-input mode.
To go to command mode during a <tt class="literal">map!</tt>, put an ESC
key in the value of the map by <b class="emphasis-bold">typing CTRL-v
and then ESC</b> (<a href="ch18_06.htm#upt3-CHP-18-SECT-6">Section 18.6</a>). After your
<tt class="literal">map!</tt> does whatever it does in command mode, it can
re-enter text-input mode with the usual commands:
<tt class="literal">a</tt>, <tt class="literal">i</tt>, and so on.
</p>

<p>Let's say you normally never type the caret
(<tt class="literal">^</tt>) key during input mode. When
you're typing along, as you realize that what
you're typing is important, you want to press the
caret key. Then, <i class="command">vi</i> should open a line above and
insert the phrase "THIS IS
IMPORTANT:". Finally, <i class="command">vi</i> should
return you to text-input mode at the end of the line where you
pressed the caret key. To do that, go to command mode and enter the
following <tt class="literal">map!</tt> command. The first
<tt class="literal">^</tt> comes from pressing the caret key. Then
you'll see two places with <tt class="literal">^[</tt>;
that are made by pressing CTRL-v followed by the ESC key. Finish the
map by pressing RETURN:
</p>

<blockquote><pre class="code">:map! ^ ^[OTHIS IS IMPORTANT:^[jA</pre></blockquote>

<p>What does that do? It executes the same <i class="command">vi</i>
commands you'd use to add those three words
yourself, manually. During text-input mode, typing a caret
(<tt class="literal">^</tt>) will:
</p>

<ol><li>
<p>Do ESC to go to command mode.</p>
</li><li>
<p>Use <tt class="literal">O</tt> to open a new line above (in text-input
mode).
</p>
</li><li>
<p>Enter the text <tt class="literal">THIS IS IMPORTANT</tt>:.</p>
</li><li>
<p>Do another ESC to go back to command mode.</p>
</li><li>
<p>Do <tt class="literal">j</tt> to go down a line (to the line where you
started).
</p>
</li><li>
<p>Do <tt class="literal">A</tt> to put you at the end of the line, in
text-input mode.
</p>
</li></ol>
<p><a name="IXT-18-1687" />The trick is to use
<tt class="literal">map!</tt> only to redefine keys you'll
never use for anything else during text-input mode. To disable a
text-input mode map temporarily, press CTRL-v before the key. For
example, to put a real caret into your file, type CTRL-v ^. To
disable an input-mode map for the rest of your <i class="command">vi</i>
session, type <tt class="literal">:unmap!</tt> followed by the character(s)
that activate the map.
</p>

<p><a name="IXT-18-1688" /> <a name="IXT-18-1689" />A
more common example is mapping your keyboard's arrow
or function keys to do something during text-input mode. These keys
send a special series of characters. Normally, without a
<tt class="literal">map!</tt> defined for these keys, the characters they
send will be put into your editor buffer -- just as if
you'd typed the characters they make yourself, one
by one. For instance, my left-arrow key sends the characters
<tt class="literal">ESC</tt>, then <tt class="literal">[</tt> (left bracket),
then <tt class="literal">D</tt>. Without a text-input mode
<tt class="literal">map!</tt> defined for that three-character sequence,
<i class="command">vi</i> will be hopelessly confused if I press that
arrow key.<a href="#FOOTNOTE-51">[51]</a> Many
Unix developers have added text-input mode maps for arrow keys. You
can see them when you list all your text-input mode maps by typing
<tt class="literal">:map!</tt> by itself, with nothing after:
</p><blockquote class="footnote"> <a name="FOOTNOTE-51" /><p> [51]Actually, the <tt class="literal">ESC</tt> will
switch <i class="command">vi</i> back to command mode. The first
<tt class="literal">[</tt> will make <i class="command">vi</i> think
you're about to type the section-motion command
<tt class="literal">[[</tt>, so the following <tt class="literal">D</tt> will
make <i class="command">vi</i> beep. Ugly, eh?</p> </blockquote>

<blockquote><pre class="code">up      ^[[A    ^[ka
down    ^[[B    ^[ja
left    ^[[D    ^[hi
right   ^[[C    ^[la
^       ^       ^[OTHIS IS IMPORTANT:^[jA</pre></blockquote>

<p><a href="ch18_03.htm#upt3-CHP-18-SECT-3">Section 18.3</a> lists some problems with
<tt class="literal">map!</tt>.
</p>

<p><em class="emphasis">--JP, DG, and LL</em></p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch18_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch18_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">18. Creating Custom Commands in vi</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">18.3. What You Lose When You Use map!</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2003</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,88,96" href="../index.htm"><area shape="rect" coords="90,0,165,96" href="../upt/index.htm"><area shape="rect" coords="168,1,253,107" href="../mac/index.htm"><area shape="rect" coords="255,0,335,97" href="../korn/index.htm"><area shape="rect" coords="337,0,415,109" href="../unixnut/index.htm"><area shape="rect" coords="417,0,512,122" href="../sedawk/index.htm"><area shape="rect" coords="514,0,605,105" href="../lunix/index.htm"><area shape="rect" coords="611,2,694,121" href="../vi/index.htm">
</map>

</body></html>