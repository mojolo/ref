<html><head><title>Killing Foreground Jobs (Unix Power Tools, 3rd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Shelley Powers, Jerry Peek, Tim O'Reilly, Mike Loukides and  " /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00330-7" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="UNIX Power Tools, 3rd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Unix Power Tools" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Unix Power Tools" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch24_10.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch24_12.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">24.11. Killing Foreground Jobs</h2>

<p><a name="IXT-24-5329" /><a name="IXT-24-5330" />You
probably know that typing <b class="emphasis-bold">CTRL-c</b>
(<a name="IXT-24-5331" /><a href="ch24_10.htm#upt3-CHP-24-SECT-10">Section 24.10</a>) will
terminate your foreground job. But what actually happens when you
type CTRL-c?
</p>

<p>When you type CTRL-c, you're sending
<a name="IXT-24-5332" />the <b class="emphasis-bold">INT
(interrupt) signal</b> (<a href="ch24_10.htm#upt3-CHP-24-SECT-10">Section 24.10</a>) to the
foreground process. Most well-designed programs
"catch" the interrupt signal, which
means that the program installs some special function (a
"signal handler") that is called
whenever a signal arrives. The signal handler normally closes all
open files, resets your terminal properly (if needed), and does
anything else necessary so that the program can depart from this
world in peace. Then the program terminates. The
<em class="emphasis">QUIT</em><a name="IXT-24-5333" /> <a name="IXT-24-5334" /> signal, sent by
CTRL-<tt class="literal">\</tt>, works similarly but also makes a
<em class="emphasis">core</em><a name="IXT-24-5335" /> file for debugging.
</p>

<p><a name="IXT-24-5336" /> <a name="IXT-24-5337" /><a name="IXT-24-5338" />Of course, it's
possible for the signal handler to do something else entirely: the
program can decide not to quit, or it can implement some truly
bizarre feature. In fact, editors such as <i class="command">vi</i> or
Emacs almost always ignore most signals. The <b class="emphasis-bold">trap</b> (<a name="IXT-24-5339" /> <a name="IXT-24-5340" /><a href="ch35_17.htm#upt3-CHP-35-SECT-17">Section 35.17</a>) command handles signals in the Bourne shell.
</p>

<p>Whenever you send a signal from the keyboard, it's
sent to all processes in the same <b class="emphasis-bold">process
group</b> (<a name="IXT-24-5341" /><a href="ch24_03.htm#upt3-CHP-24-SECT-3">Section 24.3</a>). This
may include the program's <a name="IXT-24-5342" />child processes, but it may not. And, of
course, child processes can choose to ignore signals on their own.
But more often than not, killing the parent process kills its
children.
</p>

<p><a href="ch05_08.htm#upt3-CHP-5-SECT-8">Section 5.8</a> explains how to set the key that
sends these and other signals. The <b class="emphasis-bold">kill</b> (<a href="ch24_12.htm#upt3-CHP-24-SECT-12">Section 24.12</a>) command
also sends signals.<a name="IXTR3-5468" /> <a name="IXTR3-5469" /> 
</p>

<p><em class="emphasis">--ML and JP</em></p>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch24_10.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch24_12.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">24.10. What Are Signals?</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">24.12. Destroying Processes with kill</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2003</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,88,96" href="../index.htm"><area shape="rect" coords="90,0,165,96" href="../upt/index.htm"><area shape="rect" coords="168,1,253,107" href="../mac/index.htm"><area shape="rect" coords="255,0,335,97" href="../korn/index.htm"><area shape="rect" coords="337,0,415,109" href="../unixnut/index.htm"><area shape="rect" coords="417,0,512,122" href="../sedawk/index.htm"><area shape="rect" coords="514,0,605,105" href="../lunix/index.htm"><area shape="rect" coords="611,2,694,121" href="../vi/index.htm">
</map>

</body></html>