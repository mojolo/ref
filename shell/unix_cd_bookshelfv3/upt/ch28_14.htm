<html><head><title>Command Substitution (Unix Power Tools, 3rd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Shelley Powers, Jerry Peek, Tim O'Reilly, Mike Loukides and  " /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00330-7" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="UNIX Power Tools, 3rd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Unix Power Tools" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Unix Power Tools" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch28_13.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch28_15.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">28.14. Command Substitution</h2>

<p><a name="IXT-28-4672" /><a name="IXT-28-4673" />A pair of backquotes
(``) does <em class="emphasis">command substitution</em>. This is really
useful -- it lets you use the standard output from one command as
arguments to another command.
</p>

<p>Here's an example. Assume you want to edit all files
in the current directory that contain the word
"error." Type this:
</p>

<p><tt class="literal">-l</tt> <a href="ch33_06.htm#upt3-CHP-33-SECT-6">Section 33.6</a></p>

<blockquote><pre class="code">$ <tt class="userinput"><b>vi `grep -l error *.c`</b></tt>
3 files to edit
"bar.c" 254 lines, 28338 characters
   ...
$</pre></blockquote>

<p>But why does this work? How did we build the incantation above?
First, think about how you'd do this without using
any special techniques. You'd use
<i class="command">grep</i> to find out which commands contain
<a name="IXT-28-4674" />the word
"error"; then
you'd use <i class="command">vi</i> to edit this list:
</p>

<blockquote><pre class="code">$ <tt class="userinput"><b>grep error *.c</b></tt>
bar.c:  error("input too long");
bar.c:  error("input too long");
baz.c:  error("data formatted incorrectly");
foo.c:  error("can't divide by zero"):
foo.c:  error("insufficient memory"):
$ <tt class="userinput"><b>vi bar.c baz.c foo.c</b></tt></pre></blockquote>

<p>Is there any way to compress these into one command? Yes, by using
command substitution. First, we need to modify our
<i class="command">grep</i> command so that it produces only a list of
filenames, rather than filenames and text. That's
easy; use <i class="command">grep -l</i>:
</p>

<blockquote><pre class="code">$ <tt class="userinput"><b>grep -l error *.c</b></tt>
bar.c
baz.c
foo.c</pre></blockquote>

<p>The <span class="option">-l</span><a name="IXT-28-4675" /> option
lists each filename only once, even if many lines in the file match.
(This makes me think that <i class="command">grep -l</i> was designed
with precisely this application in mind.) Now, we want to edit these
files; so we put the <i class="command">grep</i> command inside
<a name="IXT-28-4676" />backquotes, and
use it as the argument to <i class="command">vi</i><a name="IXT-28-4677" />:
</p>

<blockquote><pre class="code">$ <tt class="userinput"><b>vi `grep -l error *.c`</b></tt>
3 files to edit
"bar.c" 254 lines, 28338 characters
   ...
$</pre></blockquote>

<p>You might be wondering about the difference between the
"vertical" output from
<i class="command">grep</i> and the
"horizontal" way that people
usually type arguments on a command line. The shell handles this with
no problems. Inside backquotes, both a newline and a space are
<a name="IXT-28-4678" />argument separators.
</p>

<p>The list you use with command substitution doesn't
have to be filenames. Let's see how to send a
<b class="emphasis-bold">mail message</b> (<a href="ch01_21.htm#upt3-CHP-1-SECT-21">Section 1.21</a>) to all the users logged on to the system now.
You want a command line like this:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>mail joe lisa franka mondo bozo harpo ...</b></tt></pre></blockquote>

<p>Getting there takes a little thinking about what Unix commands you
need to run to get the output you want. (This is real
"Power Tools" stuff!) To get a list
of those users, you could use <b class="emphasis-bold">who</b>
(<a name="IXT-28-4679" /><a href="ch02_08.htm#upt3-CHP-2-SECT-8">Section 2.8</a>). The <i class="command">who</i> output also lists
login time and other information -- but you can cut that off with
a command like <b class="emphasis-bold">cut</b>
(<a name="IXT-28-4680" /><a href="ch21_14.htm#upt3-CHP-21-SECT-14">Section 21.14</a>):
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>who | cut -c1-8</b></tt>
joe
lisa
franka
lisa
joe
mondo
joe
...</pre></blockquote>

<p>Some users are logged on more than once. To get a unique list, use
<b class="emphasis-bold">sort -u</b> (<a href="ch22_06.htm#upt3-CHP-22-SECT-6">Section 22.6</a>). You're done. Just put the
name-making command line between backquotes:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>mail `who | cut -c1-8 | sort -u`</b></tt></pre></blockquote>

<p>If you aren't sure how this works, replace the
command you want to run with <b class="emphasis-bold">echo</b>
(<a href="ch26_05.htm#upt3-CHP-26-SECT-5">Section 26.5</a>):
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>echo `who | cut -c1-8 | sort -u`</b></tt>
bozo franka harpo joe lisa mondo</pre></blockquote>

<p>After using Unix for a while, you'll find that this
is one of its most useful features. You'll find many
situations where you use one command to generate a list of words,
then put that command in backquotes and use it as an argument to
something else. Sometimes you'll want to <b class="emphasis-bold">nest</b>
<a name="IXT-28-4681" /> <a name="IXT-28-4682" />(<a href="ch36_24.htm#upt3-CHP-36-SECT-24">Section 36.24</a>) the backquotes -- this is where the
<i class="command">bash</i>, <i class="command">ksh</i>,
<i class="command">bash</i>, and <i class="command">zsh</i> <tt class="literal">$(
)</tt><a name="IXT-28-4683" /> operators
(which replace the opening and closing backquote, respectively) come
in handy. There are some problems with command substitution, but you
usually won't run into them.
</p>

<p>This book has many, many examples of <a name="IXT-28-4684" />command substitution. Here are some of
them: <b class="emphasis-bold">making unique filenames</b> (<a href="ch08_17.htm#upt3-CHP-8-SECT-17">Section 8.17</a>), <b class="emphasis-bold">removing some files
from a list</b> (<a href="ch14_18.htm#upt3-CHP-14-SECT-18">Section 14.18</a>), <b class="emphasis-bold">setting your shell prompt</b> (<a href="ch04_06.htm#upt3-CHP-4-SECT-6">Section 4.6</a>, <a href="ch04_08.htm#upt3-CHP-4-SECT-8">Section 4.8</a>, <a href="ch04_14.htm#upt3-CHP-4-SECT-14">Section 4.14</a>), and <b class="emphasis-bold">setting
variables</b> (<a href="ch04_08.htm#upt3-CHP-4-SECT-8">Section 4.8</a>, <a href="ch36_23.htm#upt3-CHP-36-SECT-23">Section 36.23</a>). 
</p>

<p> <em class="emphasis">-- JP</em></p>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch28_13.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch28_15.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">28.13. Here Document Example #1: Unformatted Form Letters</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">28.15. Handling Lots of Text with Temporary Files</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2003</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,88,96" href="../index.htm"><area shape="rect" coords="90,0,165,96" href="../upt/index.htm"><area shape="rect" coords="168,1,253,107" href="../mac/index.htm"><area shape="rect" coords="255,0,335,97" href="../korn/index.htm"><area shape="rect" coords="337,0,415,109" href="../unixnut/index.htm"><area shape="rect" coords="417,0,512,122" href="../sedawk/index.htm"><area shape="rect" coords="514,0,605,105" href="../lunix/index.htm"><area shape="rect" coords="611,2,694,121" href="../vi/index.htm">
</map>

</body></html>