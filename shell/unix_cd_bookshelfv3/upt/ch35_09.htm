<html><head><title>Shell Variables (Unix Power Tools, 3rd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Shelley Powers, Jerry Peek, Tim O'Reilly, Mike Loukides and  " /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00330-7" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="UNIX Power Tools, 3rd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Unix Power Tools" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Unix Power Tools" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch35_08.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch35_10.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">35.9. Shell Variables</h2>

<p><a name="IXT-35-3576" /><a name="IXT-35-3577" />Shell <a name="upt3-IDXTERM-5490" /> <a name="upt3-IDXTERM-5491" />variables are really just the
"general case" of <b class="emphasis-bold">environment variables</b> (<a href="ch35_03.htm#upt3-CHP-35-SECT-3">Section 35.3</a>). If you're a programmer,
remember that a Unix shell really runs an interpreted programming
language. Shell variables belong to the shell; you can set them,
print them, and work with them much as you can in a C program (or a
FORTRAN program or a BASIC program). If you're not a
programmer, just remember that shell variables are pigeonholes that
store information for you or your shell to use.
</p>

<p><a name="IXT-35-3578" /> <a name="IXT-35-3579" />If you've read the
articles on environment variables, you realize that we defined them
in exactly the same way. How are shell variables different from
environment variables?
<a name="IXT-35-3580" /><a name="IXT-35-3581" />Whenever you start a new shell or a Unix
program, it inherits all of its parent's environment
variables. However, it does <em class="emphasis">not</em> inherit any
shell variables; it starts with a clean slate (except, possibly,
variables in some <b class="emphasis-bold">shell setup files</b>
(<a href="ch03_03.htm#upt3-CHP-3-SECT-3">Section 3.3</a>)). If you're a
programmer, you can think of environment variables as
"global" variables, while shell
variables are "local" variables. By
convention, shell variables have lowercase <a name="IXT-35-3582" />names.
</p>

<p>Just as some programs use certain environment variables, the shell
expects to use certain shell variables. <a name="IXT-35-3583" /><a name="IXT-35-3584" /> <a name="IXT-35-3585" />For
example, the C shell uses the <b class="emphasis-bold">history</b> (<a href="ch30_01.htm#upt3-CHP-30-SECT-1">Section 30.1</a>)
variable to determine how many of your previous commands to remember;
if the <b class="emphasis-bold">noclobber</b> (<a href="ch43_06.htm#upt3-CHP-43-SECT-6">Section 43.6</a>) variable is defined, the C shell prevents you
from damaging files by making mistakes with standard output. Most
users insert code into their <b class="emphasis-bold">.cshrc or
.tcshrc</b> (<a href="ch03_03.htm#upt3-CHP-3-SECT-3">Section 3.3</a>) files to define
these important variables appropriately. Alternatively, they split
them up into context-specific files and then <b class="emphasis-bold">read them into their environment</b> (<a href="ch35_29.htm#upt3-CHP-35-SECT-29">Section 35.29</a>) as needed.
</p>

<p>To set a shell variable, use one of these commands:</p>

<blockquote><pre class="code">% <tt class="userinput"><b>set </b></tt><em class="replaceable"><tt>name</em><tt class="userinput"><b>=</b></tt><em class="replaceable">value   </tt></em><i class="lineannotation">C shell</i>
$ <em class="replaceable"><tt>name</em><tt class="userinput"><b>=</b></tt><em class="replaceable">value   </tt></em><i class="lineannotation">  other shells</i></pre></blockquote>

<p>As a special case, if you omit <em class="emphasis">value</em>, the shell
variable is set to a "null" value.
For example, the following commands are valid:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>set </b></tt><em class="replaceable"><tt>name   </tt></em><i class="lineannotation">C shell</i>
$ <em class="replaceable"><tt>name</tt></em><tt class="userinput"><b>=      </b></tt><i class="lineannotation">other shells</i></pre></blockquote>

<p>This is important: giving a variable a null value is not the same as
deleting the value. Some programs look at variables to see whether or
not they exist; they don't care what the actual
value is, and an empty value is as good as anything else.
</p>

<p><a name="IXT-35-3586" />Most
newer shells -- but not the original C and Bourne shells -- let
you prevent accidental changes in a variable by marking it read-only
after you've stored its value:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>set -r </b></tt><em class="replaceable"><tt>name</tt></em>    <i class="lineannotation">tcsh</i>
$ <tt class="userinput"><b>readonly </b></tt><em class="replaceable"><tt>name</tt></em>  <i class="lineannotation">other shells</i></pre></blockquote>

<p>(In <i class="command">zsh</i><a name="IXT-35-3587" />, you can mark a variable read-only
as you initialize it: <tt class="literal">readonly</tt>
<em class="replaceable"><tt>name=value</tt></em>.) If you want to make the shell
forget that a variable ever existed, use the <i class="command">unset</i>
command. Note that, in general, you can't unset a
read-only variable! Also, older Bourne shells don't
have a command like <i class="command">unset</i>:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>unset </b></tt><em class="replaceable"><tt>name   </tt></em><i class="lineannotation">C shell</i>
$ <tt class="userinput"><b>unset </b></tt><em class="replaceable"><tt>name   </tt></em><i class="lineannotation">others except old Bourne shell</i></pre></blockquote>

<p><a name="IXT-35-3588" /><a name="IXT-35-3589" /><a name="IXT-35-3590" /> <a name="IXT-35-3591" /><a name="IXT-35-3592" />If you want to list all of your
environment variables, use the command <b class="emphasis-bold">printenv
or env</b> (<a href="ch35_03.htm#upt3-CHP-35-SECT-3">Section 35.3</a>).<a href="#FOOTNOTE-105">[105]</a> If you want to list all of your Bourne or C shell
variables, just type <tt class="literal">set</tt>. Here's
a typical report in the C shell:
</p><blockquote class="footnote">
<a name="FOOTNOTE-105" /><p> [105]<i class="command">printenv</i> and <i class="command">env</i> are
<b class="emphasis-bold">external</b> (<a href="ch01_09.htm#upt3-CHP-1-SECT-9">Section 1.9</a>) commands; they work with any shell.</p>
</blockquote>

<blockquote><pre class="code">% <tt class="userinput"><b>set</b></tt>
argv    ( )
cwd     /home/los/mikel/power/articles
history 40
home    /home/los/mikel
noclobber
path    (/home/los/mikel/bin /usr/local/bin /usr/ucb /bin /usr/bin .)
prompt  los%
shell   /bin/csh
status  0
term    sun
user    mikel</pre></blockquote>

<p>If you want to print the value of an individual variable, give the
command: <a name="IXT-35-3593" /> <a name="IXT-35-3594" />
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>echo "$</b></tt><em class="replaceable"><tt>variablename</tt></em><tt class="userinput"><b>"</b></tt></pre></blockquote>

<p>(While the example above gives a C shell prompt, this command works
in all Unix shells.) The quotes aren't necessary for
something as simple as an <i class="command">echo</i> statement, but if
you want the value captured, for example, so that you can apply it to
another variable, they are recommended.
</p>

<p><a name="IXT-35-3595" /> <a name="IXT-35-3596" />Whenever you need the value of a shell
variable -- not just with <i class="command">echo</i> -- you need
to put a dollar sign (<tt class="literal">$</tt>) in front of the name.
Don't use the dollar sign when
you're assigning a new value to a shell variable.
You can also stick curly braces (<tt class="literal">{}</tt>) around the
name if you want to (e.g.,
<tt class="literal">${</tt><em class="replaceable"><tt>name</tt></em><tt class="literal">}</tt>);
when you're writing shell programs, this can often
make your code much clearer. Curly braces are mostly used when you
need to separate the variable name from what comes after it.
</p>

<p>But that's getting us out of the range of
interactive variable use and into <b class="emphasis-bold">shell
programming</b> (<a href="ch35_02.htm#upt3-CHP-35-SECT-2">Section 35.2</a>).<a name="IXTR3-3808" /> <a name="IXTR3-3809" />
</p>

<p><em class="emphasis">--ML and SJC</em></p>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch35_08.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch35_10.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">35.8. The DISPLAY Environment Variable</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">35.10. Test String Values with Bourne-Shell case</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2003</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,88,96" href="../index.htm"><area shape="rect" coords="90,0,165,96" href="../upt/index.htm"><area shape="rect" coords="168,1,253,107" href="../mac/index.htm"><area shape="rect" coords="255,0,335,97" href="../korn/index.htm"><area shape="rect" coords="337,0,415,109" href="../unixnut/index.htm"><area shape="rect" coords="417,0,512,122" href="../sedawk/index.htm"><area shape="rect" coords="514,0,605,105" href="../lunix/index.htm"><area shape="rect" coords="611,2,694,121" href="../vi/index.htm">
</map>

</body></html>