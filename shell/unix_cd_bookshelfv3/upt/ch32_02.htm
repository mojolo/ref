<html><head><title>Don't Confuse Regular Expressions with Wildcards (Unix Power Tools, 3rd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Shelley Powers, Jerry Peek, Tim O'Reilly, Mike Loukides and  " /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00330-7" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="UNIX Power Tools, 3rd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Unix Power Tools" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Unix Power Tools" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch32_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch32_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">32.2. Don't Confuse Regular Expressions with Wildcards</h2>

<p><a name="IXT-32-3912" /> <a name="IXT-32-3913" />Before we even start talking about regular
expressions, a word of caution for beginners: regular expressions can
be confusing because they look a lot like the file-matching
<a name="IXT-32-3914" />patterns
("wildcards") the shell uses.
<a name="IXT-32-3915" />Both the shell and programs that
use regular expressions have special meanings for the asterisk
(<tt class="literal">*</tt>), question mark (<tt class="literal">?</tt>),
parentheses (<tt class="literal">( )</tt>), square brackets (<tt class="literal">[
]</tt>), and vertical bar (<tt class="literal">|</tt>, the
"pipe").
</p>

<p>Some of these characters even act the same way -- almost.</p>

<p>Just remember, the
<a name="IXT-32-3916" /> <a name="IXT-32-3917" />shells, <i class="command">find</i>, and
some others generally use <a name="IXT-32-3918" />filename-matching patterns and not regular
expressions.<a href="#FOOTNOTE-99">[99]</a>
</p><blockquote class="footnote"> <a name="FOOTNOTE-99" /><p> [99]Recent versions of many programs,
including <i class="command">find</i>, now support regex via special
command-line options. For example,
<i class="command">find</i><a name="IXT-32-3919" /> on my Linux server supports the
<span class="option">-regex</span> and <span class="option">-iregex</span> options, for
specifying filenames via a regular expression, case-sensitive and
-insensitive, respectively. But the <i class="command">find</i> command
on my OS X laptop does not. -- SJC</p> </blockquote>

<p><a name="IXT-32-3920" />You also have to remember that shell
<a name="IXT-32-3921" /> <a name="IXT-32-3922" />wildcards are expanded before the
shell passes the arguments to the program. To prevent this expansion,
the special characters in a regular expression must be <b class="emphasis-bold">quoted</b> (<a href="ch27_12.htm#upt3-CHP-27-SECT-12">Section 27.12</a>) when
passed as an argument from the shell.
</p>

<p>The command:</p>

<blockquote><pre class="code">$ <tt class="userinput"><b>grep [A-Z]*.c chap[12]</b></tt></pre></blockquote>

<p>could, for example, be interpreted by the shell as:</p>

<blockquote><pre class="code">grep Array.c Bug.c Comp.c chap1 chap2</pre></blockquote>

<p>and so <i class="command">grep</i> would then try to find the pattern
"Array.c" in files
<em class="filename">Bug.c</em>, <em class="filename">Comp.c</em>,
<em class="filename">chap1</em>, and <em class="filename">chap2</em>.
</p>

<p>The simplest solution in most cases is to surround the regular
expression with <a name="IXT-32-3923" />single quotes (<tt class="literal">'</tt>).
Another is to use the <i class="command">echo</i><a name="IXT-32-3924" /> command to echo
your command line to see how the shell will interpret the special
characters.
</p>

<p>--<em class="emphasis">BB and DG, TOR</em></p>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch32_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch32_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">32. Regular Expressions </td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">32.3. Understanding Expressions</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2003</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="1,0,88,96" href="../index.htm"><area shape="rect" coords="90,0,165,96" href="../upt/index.htm"><area shape="rect" coords="168,1,253,107" href="../mac/index.htm"><area shape="rect" coords="255,0,335,97" href="../korn/index.htm"><area shape="rect" coords="337,0,415,109" href="../unixnut/index.htm"><area shape="rect" coords="417,0,512,122" href="../sedawk/index.htm"><area shape="rect" coords="514,0,605,105" href="../lunix/index.htm"><area shape="rect" coords="611,2,694,121" href="../vi/index.htm">
</map>

</body></html>